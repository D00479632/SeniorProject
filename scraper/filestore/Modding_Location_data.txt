Jump to navigation
Jump to search
← Modding:Index
This page explains how to create and edit in-game locations.
Contents
1 Terminology
2 Data format
2.1 Basic info
2.2 Contents
2.3 Music
2.4 Advanced
3 Default entry
4 Examples
4.1 Simple location
5 FAQs
5.1 How do I get to a custom location in-game?
5.2 Can I make the location conditional?
5.3 Can I rename a location?
6 Location names
7 See also
Terminology
A few terms may be used interchangeably or have different meanings depending on the context. In the context of Stardew Valley:
A location is part of the game code and save data. It manages the in-game area and everything inside it (including non-map entities like players). The location is read/written to the save file, and is only loaded when loading the save file.
A map is an asset which describes the tile layout, tilesheets, and map/tile properties for the in-game area. The map is reloaded each time you load a save, and each time a mod changes the map.
A world map is the image shown for a world region in the in-game menu.
In other words, a location (part of the game code) references the map (loaded from the Content folder):
┌─────────────────────────────────┐
│ Location                        │
│   - objects                     │
│   - furniture                   │
│   - crops                       │
│   - bushes and trees            │
│   - NPCs and players            │
│   - etc                         │
│                                 │
│   ┌─────────────────────────┐   │
│   │ Map asset               │   │
│   │   - tile layout         │   │
│   │   - map/tile properties │   │
│   │   - tilesheets          │   │
│   └─────────────────────────┘   │
└─────────────────────────────────┘
Data format
You can add or edit locations by editing the Data/Locations asset.
This consists of a string → model lookup, where...
The key is the unique string ID of the location (i.e. "internal name"), which will also be used as the location's Name (not DisplayName) field. (The farm will use Farm_<type key> for a vanilla farm type, or Farm_<type ID> for a custom farm type, or Farm_Standard if no type-specific entry was found.)
The value is a model with the fields listed below.
Basic info
field effect
DisplayName (Optional but strongly recommended) A tokenizable string for the translated location name. This is used anytime the location name is shown in-game for base game logic or mods.
DefaultArrivalTile (Optional but strongly recommended) The default tile position where the player should be placed when they arrive in the location, if arriving from a warp that didn't specify a tile position. Default none, which usually places the player at (0, 0).
CreateOnLoad (Optional) If set, the location will be created automatically when the save is loaded using this data.
This consists of a model with these fields:
field effect
MapPath The asset name for the map to use for this location.
AlwaysActive (Optional) Whether this location is always synchronized to farmhands in multiplayer, even if they're not in the location. Any location which allows building cabins must have this enabled to avoid breaking game logic.
Type (Optional) The full name of the C# location class to create. This must be one of the vanilla types to avoid a crash when saving. There are too many to list here, but the most useful types are likely StardewValley.GameLocation (default value) and StardewValley.Locations.DecoratableLocation.
CanPlantHere (Optional) Whether crops and trees can be planted and grown here by default, unless overridden by their plantable rules. Defaults to true for farms and false for other locations.
ExcludeFromNpcPathfinding (Optional) Whether NPCs should ignore this location when pathfinding between locations. Default false.
Contents
field effect
ArtifactSpots (Optional) The items that can be found when digging artifact spots in this location.
An artifact spot is selected by combining this field with the equivalent field on the Default entry, sorting by Precedence value, and then choosing the first entry whose fields match. (Artifact spot drops can also be listed in Data/Objects's ArtifactSpotChances field; those are applied by the RANDOM_ARTIFACT_FOR_DIG_SPOT entry in DefaultArtifactSpots.)
This consists of a list of models with these fields:
field effect
common fields See item spawn fields for the generic item fields supported by artifact spot drops.
If set to an item query which returns multiple items, one of them will be selected at random.
Chance (Optional) The probability that the item will be dropped if the other fields match, as a decimal value between 0 (never) and 1 (always). Default 1.
ApplyGenerousEnchantment (Optional) Whether to apply the 'Generous' enchantment, which adds a 50% chance of the item dropping twice. If the enchantment is applied, the item's fields are rerolled for the second drop (e.g. a new random value between MinStack and MaxStack is selected). Default true.
OneDebrisPerDrop (Optional) Whether to split the dropped item stack into multiple floating debris that each have a stack size of one. For example, if the dropped item has a stack size of 3, this will spawn three separate item stacks. Default true.
ContinueOnDrop (Optional) Whether to continue checking for more items to drop when this item is dropped. Default false.
Precedence (Optional) The order in which this entry should be checked, where lower values are checked first. This can be a negative value. Artifact spots with the same precedence are checked in the order listed. Default 0.
For consistency, vanilla artifact drops mostly use these values:
-1000: location items which should override the global priority items (e.g. fossils on Ginger Island);
-100: global priority items (e.g. Qi Beans);
0: normal items;
100: global fallback items (e.g. clay).
For example, a location with this field will drop 2-4 pufferfish with a 50% chance on summer days:
"ArtifactSpots": [
    {
        "Condition": "LOCATION_SEASON Here summer",
        "ItemId": "(O)128",
        "MinStack": 2,
        "MaxStack": 4
    }
]
FishAreas (Optional) The distinct fishing areas within the location. These can be referenced by fish via FishAreaId, and determine which fish are collected by crab pots.
This consists of a string → model lookup, where the key is the fish area ID and the value consists of a list of models with these fields:
field effect
Position (Optional) The tile position and size covered by this fishing area, specified as an object with X, Y, Width, and Height fields. This area will apply for crab pots placed within it, or when the fishing rod bobber lands within it. Default null (anywhere).
Areas with a Position value have priority over those without. If two areas with a Position overlap, the tiles that are overlapping will be treated as part of the first FishArea listed, effectively making the other area smaller than its Position values indicate.
CrabPotFishTypes (Optional) A list of fish types that can be caught by crab pots within the area. This is matched against field index 4 in Data/Fish for 'trap' (i.e. crab pot) fish. The vanilla types are freshwater and ocean. If omitted, defaults to freshwater.
CrabPotJunkChance (Optional) The chance that crab pots within the area will find junk instead of a fish each time they produce a harvest. This is ignored if the player has the Mariner profession. Default 0.2 (20%).
Fish (Optional) The fish that can be caught in the location.
A fish is selected by combining this field with the equivalent field on the Default entry, sorting by Precedence value (and randomly shuffling entries with the same precedence), and then choosing the first entry whose fields match.
Note: the produced item ID is saved to recreate the fish later. Any item info that's not based on the item ID is ignored (like stack size, quality, flavored variants like Blueberry Wine vs Wine, and the is-recipe flag).
This consists of a list of models with these fields:
field effect
common fields See item spawn fields for the generic item fields supported by forage items.
This must return an Object item (or subclass of Object). If set to an item query which returns multiple items, one of them will be selected at random.
Chance (Optional) The probability that the fish will spawn if selected, as a decimal value between 0 (never) and 1 (always). Default 1.
Season (Optional) If set, the specific season when the fish can be caught. This is much more efficient than using Condition, but only supports a single season. Defaults to null (all seasons).
FishAreaId (Optional) If set, the fish area in which the fish can be caught (as an area ID defined under FishAreas). Defaults to null (all zones).
BobberPosition (Optional) If set, the tile area within the location where the fishing rod's bobber must land to catch the fish. Default null (anywhere).
PlayerPosition (Optional) If set, the tile area within the location where the player must be standing to catch the fish. Default null (anywhere).
MinFishingLevel (Optional) The minimum fishing level needed for the fish to appear. Default 0.
ApplyDailyLuck (Optional) Whether to add the player's daily luck to the spawn chance. This affects both the Chance field and the Data\Fish chance, if applicable. Default false.
CuriosityLureBuff (Optional) The value to add to the spawn chance when the player has the Curiosity Lure equipped, if set to 0 or higher. This affects both the Chance field and the Data\Fish chance, if applicable. Default -1, which keeps the default behavior (i.e. no effect on the Chance field and a scaled boost to the Data\Fish chance).
SpecificBaitBuff (Optional) A flat increase to the spawn chance when the player has a specific bait equipped which targets this fish. Default 0.
SpecificBaitMultiplier (Optional) A multiplier applied to the spawn chance when the player has a specific bait equipped which targets this fish. Default 1.66.
CatchLimit (Optional) The maximum number of this fish which can be caught by each player. This limit is permanent (i.e. once it's reached, that fish will never appear again). For example, legendary fish set this to one. Default -1 (no limit).
CanUseTrainingRod (Optional) Whether the player can catch this fish using a training rod. This can be true (always allowed), false (never allowed), or null (apply default logic, i.e. allowed for difficulty ratings under 50). Default null.
IsBossFish (Optional) Whether this is a 'boss fish' catch. This shows a crowned fish sprite in the fishing minigame and gives five times normal XP, like legendary fish.
RequireMagicBait (Optional) Whether the player must fish with Magic Bait for this fish to spawn. Default false.
MinDistanceFromShore (Optional) The minimum distance from the nearest shore (measured in tiles) at which the fish can be caught, where zero is water directly adjacent to shore.
MaxDistanceFromShore (Optional) The maximum distance from the nearest shore (measured in tiles) at which the fish can be caught, where zero is water directly adjacent to shore. Default -1 (no limit).
Precedence (Optional) The order in which this entry should be checked, where lower values are checked first. This can be a negative value. Fish with the same precedence are shuffled randomly. Default 0.
For consistency, vanilla fish mostly use values in these ranges:
-1100 to -1000: global priority items (e.g. Qi Beans);
-200 to -100: unique location items (e.g. legendary fish or secret items);
-50 to -1: normal high-priority items;
0: normal items;
1 to 100: normal low-priority items;
1000+: global fallback items (e.g. trash).
IgnoreFishDataRequirements (Optional) Whether to ignore spawn requirements listed in Data/Fish, if applicable.
The Data/Fish requirements are ignored regardless of this field for non-object ((O))-type items, or objects whose ID isn't listed in Data/Fish.
CanBeInherited (Optional) Whether this fish can be spawned in another location via the LOCATION_FISH item query. Default true.
SetFlagOnCatch (Optional) The mail flag to set for the current player when this fish is successfully caught. Default none.
ChanceModifiers (Optional) Quantity modifiers applied to the Chance value. Default none.
ChanceModifierMode (Optional) quantity modifier modes which indicate what to do if multiple modifiers in the ChanceModifiers field apply at the same time. Default Stack.
ChanceBoostPerLuckLevel (Optional) How much to increase the Chance per player's Luck level.
UseFishCaughtSeededRandom (Optional) Whether the chance roll will use a seed value based on the number of fish caught.
Forage (Optional) The forage that can spawn in the location.
Notes:
Unlike other item spawn lists, these entries aren't checked sequentially. Instead, the game...
combines this list with any forage in the Default location entry;
adds every forage entry whose Condition and Season match to a spawn pool;
chooses a random number of spawn opportunities (between 1 and 4);
for each spawn opportunity, chooses a random tile position and forage to spawn. If the spawn fails (e.g. the tile is water/occupied or the forage's Chance doesn't pass), the game will make nine other attempts with a re-randomized tile & forage before skipping this spawn opportunity.
The stack size is ignored.
This consists of a list of models with these fields:
field effect
common fields See item spawn fields for the generic item fields supported by forage items.
This must return an Object ((O))-type item. If it uses an item query that returns multiple items, one will be selected at random. If it returns null or a non-Object item, the spawn attempt will be skipped (with a logged warning if the item type is invalid).
Chance (Optional) The probability that the item will spawn if selected, as a decimal value between 0 (never) and 1 (always). Default 1.
Season (Optional) The specific season when the forage should apply. This is more efficient than using Condition, but only supports a single season. Defaults to null (all seasons).
MinDailyWeeds
MaxDailyWeeds (Optional) The minimum and maximum number of weeds to spawn in a day, if applicable. Default 1 and 5 respectively.
FirstDayWeedMultiplier (Optional) On the first day of each year, a multiplier to apply to the number of daily weeds spawned. Default 15.
MinDailyForageSpawn
MaxDailyForageSpawn (Optional) The minimum and maximum number of forage to try spawning in one day, if applicable and the location has fewer than MaxSpawnedForageAtOnce forage. Default 1 and 4 respectively.
MaxSpawnedForageAtOnce (Optional) The maximum number of spawned forage that can be present at once on the map before they stop spawning. Default 6.
ChanceForClay (Optional) The probability that digging a tile will produce clay, as a value between 0 (never) and 1 (always).
Music
field effect
Music (Optional) The music to play when the player enters the location (subject to the other fields like MusicContext).
The first matching entry is used. If none match, falls back to MusicDefault.
This consists of a list of models with these fields:
field effect
Id (Optional) A unique string ID which identifies this entry within the list. Defaults to the Track value.
Track The audio track ID to play.
Condition (Optional) A game state query which indicates whether this entry applies. Default true.
MusicDefault (Optional) The music to play if none of the options in Music matched. If this is null, falls back to the Music map property (if set).
MusicContext (Optional) The music context for this location. The recommended values are Default or SubLocation. Default Default.
Setting SubLocation has two effects:
SubLocation has a lower priority than Default. In split-screen mode, that means if player A is at a location with a Default music context, and player B is a location with a SubLocation context, the game will choose player A's music.
When the player leaves a location with SubLocation music, the music will be stopped unless the new location has the same music and music context set.
MusicIgnoredInRain (Optional) Whether the location music is ignored when it's raining in this location. Default false.
MusicIgnoredInSpring
MusicIgnoredInSummer
MusicIgnoredInFall
MusicIgnoredInWinter (Optional) Whether the location music is ignored in the given season. Default false.
MusicIgnoredInFallDebris (Optional) Whether the location music is ignored in fall during windy weather. Default false.
MusicIsTownTheme (Optional) Whether to use the same behavior as Pelican Town's music: it will start playing after the day music has finished, and will continue playing while the player travels through indoor areas, but will stop when entering another outdoor area that isn't marked with the same Music and MusicIsTownTheme values. Default false.
Advanced
field effect
CustomFields (Optional) The custom fields for this entry.
FormerLocationNames (Optional) The former location names which may appear in save data. See Can I rename a location? in the FAQs for more info.
Default entry
The Data/Locations asset has a location with the key Default. The ArtifactSpots, Fish, and Forage fields for this entry are added to every other location's equivalent fields, so this lets you add artifact spots / fish / forage in all locations.
Examples
Simple location
Here's how you'd add a simple location with the default behavior.
Note that {{ModId}} is a Content Patcher token, which will be replaced with your mod ID automatically for the unique string ID convention.
Create an empty Content Patcher content pack.
Unpack the game assets, then copy & paste a similar vanilla map into your content pack's assets folder.
Edit the content.json to add the location data:
{
    "Format": "2.5.0",
    "Changes": [
        // add location data
        {
            "Action": "EditData",
            "Target": "Data/Locations",
            "Entries": {
                "{{ModId}}_ExampleCave": {
                    "CreateOnLoad": {
                        "MapPath": "Maps/{{ModId}}_ExampleCave"
                    }
                }
            }
        },

        // add the map file
        {
            "Action": "Load",
            "Target": "Maps/{{ModId}}_ExampleCave",
            "FromFile": "assets/map.tmx"
        },

        // add a warp from another map
        {
            "Action": "EditMap",
            "Target": "Maps/Town",
            "AddWarps": [
                "29 67 {{ModId}}_ExampleCave 0 30" // warp from town (center of plaza) to custom location (tile 0, 30)
            ]
        }
    ]
}
That's it! If you load your game and walk onto tile (10, 10) in town, you should warp to your custom location.
You can then add more fields to your Data/Locations entry (for music, forage, artifact spots, fish, etc) or edit the map as needed.
FAQs
How do I get to a custom location in-game?
Adding a location to Data/Locations only adds the location to the game. Don't forget to give players some way to reach it, usually by adding warps from another map using EditMap in a Content Patcher content pack.
For a quick test, you can run the debug warp <location name> console command to warp directly into it.
Can I make the location conditional?
There's many ways you can decide when players have access. For example, you can use EditMap in a Content Patcher content pack to add warps conditionally or to add some form of roadblock that must be cleared (e.g. a landslide).
Note: don't make the existence of the location itself conditional, just make it unreachable. Removing the location will permanently delete everything inside it.
Can I rename a location?
Renaming a location will permanently lose player changes made for the old name if you're not careful.
You can avoid that by setting the FormerLocationNames field in Data/Locations. If a location in save data has a name which (a) matches one of the FormerLocationNames and (b) doesn't match the name of a loaded location, its data will be loaded into the location which specified the FormerLocationNames field instead.
For example:
"FormerLocationNames": [ "Custom_SomeOldName" ]
Legacy names can have any format, but they must be globally unique. They can't match the Name or FormerLocationNames of any other location in Data/Locations (whether vanilla or custom).
Location names
In-game locations like the farm or beach are represented by the GameLocation class (or a subclass), and are identified by a unique name.
Here are some of the vanilla locations:
Name Class Description
Farm StardewValley.Farm The outdoor area of the Pelican Town farm.
FarmHouse StardewValley.Locations.FarmHouse The interior of the farm house.
FarmCave StardewValley.Locations.FarmCave The bats/mushroom cave on the farm.
Town StardewValley.Locations.Town The outdoor area of Pelican Town.
JoshHouse StardewValley.GameLocation Alex/George/Evelyn's house. (Josh was the old name for the Alex character.)
HaleyHouse StardewValley.GameLocation Haley/Emily's house.
SamHouse StardewValley.GameLocation Sam/Jodi/Kent/Vincent's house.
Blacksmith StardewValley.GameLocation Clint's blacksmith shop.
ManorHouse StardewValley.Locations.ManorHouse Mayor Lewis' house.
SeedShop StardewValley.Locations.SeedShop Pierre's general store (also Caroline/Abigail's house and church)
Saloon StardewValley.GameLocation The Stardrop Saloon (and Gus' house)
Trailer StardewValley.GameLocation Pam/Penny's trailer.
Hospital StardewValley.GameLocation Harvey's clinic.
HarveyRoom StardewValley.GameLocation Harvey's room upstairs from the clinic.
Beach StardewValley.Locations.Beach The beach south of Pelican Town.
ElliottHouse StardewValley.GameLocation Elliott's cabin on the beach.
Mountain StardewValley.Locations.Mountain The outdoor mountain area where the Carpenter, Linus' tent, and Adventurer's Guild are.
ScienceHouse StardewValley.GameLocation The Carpenter's Shop.
SebastianRoom StardewValley.GameLocation Sebastian's room in the basement of the carpenter house.
Tent StardewValley.GameLocation Linus' tent.
Forest StardewValley.Locations.Forest Cindersap forest south of the farm.
WizardHouse StardewValley.Locations.WizardHouse The wizard/Rasmodius's tower
AnimalShop StardewValley.GameLocation Marnie's Ranch
LeahHouse StardewValley.GameLocation Leah's Cottage.
BusStop StardewValley.Locations.BusStop The bus stop area between the farm and Pelican Town.
Mine StardewValley.Locations.Mine The first room of the mines, where the dwarf's shop is.
Sewer StardewValley.Locations.Sewer The sewers where Krobus' shop is.
BugLand StardewValley.Locations.BugLand The mutant bug lair in the sewers.
Desert StardewValley.Locations.Desert Calico Desert where Sandy's Oasis shop and the skull cavern are.
Club StardewValley.Locations.Club Mr. Qi's casino in Sandy's Oasis shop.
SandyHouse StardewValley.GameLocation The Oasis, Sandy's shop in Calico Desert.
ArchaeologyHouse StardewValley.Locations.LibraryMuseum The Museum in Pelican Town, south of the Blacksmith.
WizardHouseBasement StardewValley.GameLocation The basement of the Wizard's Tower
AdventureGuild StardewValley.Locations.AdventureGuild The Adventurer's Guild, home of Marlon and Gil.
Woods StardewValley.Locations.Woods The secret woods in Cindersap forest blocked by a large log.
Railroad StardewValley.Locations.Railroad The railroad north of the mountains, where the spa is located.
WitchSwamp StardewValley.GameLocation The swamp area where the Witch's Hut is.
WitchHut StardewValley.GameLocation The interior of the Witch's Hut.
WitchWarpCave StardewValley.GameLocation The cave accessible at the top right of the railroad, which warps to the Witch's swamp.
Summit StardewValley.Locations.Summit The summit north of the railroad.
FishShop StardewValley.Locations.FishShop Willy's shop.
BathHouse_Entry StardewValley.GameLocation The entrance room in the spa, leading to the men's and women's locker rooms.
BathHouse_MensLocker StardewValley.GameLocation The men's locker room in the spa.
BathHouse_WomensLocker StardewValley.GameLocation The women's locker room in the spa.
BathHouse_Pool StardewValley.Locations.BathHousePool The bathhouse pool in the spa.
CommunityCenter StardewValley.Locations.CommunityCenter The inside of the Community Center.
JojaMart StardewValley.Locations.JojaMart The inside of Pelican Town's JojaMart.
Greenhouse StardewValley.GameLocation The Greenhouse on the player's farm.
SkullCave StardewValley.GameLocation The entrance of the Skull Cavern in Calico desert.
Backwoods StardewValley.GameLocation The backwoods area north of the farm/west of the bus stop, leading to the bus tunnel or to the mountains.
Tunnel StardewValley.GameLocation The dark bus tunnel to the west of the bus stop.
Trailer_Big StardewValley.GameLocation The inside of Pam/Penny's house after the Community Upgrade.
Cellar StardewValley.Locations.Cellar
Cellar2 StardewValley.Locations.Cellar
Cellar3 StardewValley.Locations.Cellar
Cellar4 StardewValley.Locations.Cellar
BeachNightMarket StardewValley.Locations.BeachNightMarket The beach south of Pelican Town during the Night Market.
MermaidHouse StardewValley.Locations.MermaidHouse The interior of the mermaid boat at the Night Market.
Submarine StardewValley.Locations.Submarine The interior of the fishing submarine during the Night Market.
AbandonedJojaMart StardewValley.Locations.AbandonedJojaMart The small interior of the abandoned JojaMart where the Missing Bundle is.
MovieTheater StardewValley.Locations.MovieTheater The interior of the Movie Theater that replaces JojaMart.
Sunroom StardewValley.GameLocation Caroline's sunroom inside Pierre's General Store.
BoatTunnel StardewValley.Locations.BoatTunnel Where Willy's Boat is, in back of the fish shop.
IslandSouth StardewValley.Locations.IslandSouth Ginger Island, the docks where the player first lands and where the beach resort is.
IslandSouthEast StardewValley.Locations.IslandSouthEast Ginger Island, where the mermaid and pirate cove are.
IslandSouthEastCave StardewValley.Locations.IslandSouthEastCave The pirate cove.
IslandEast StardewValley.Locations.IslandEast Ginger Island jungle, where Leo's hut is.
IslandWest StardewValley.Locations.IslandWest Ginger Island, Island West, where the farm and Birdie's Shack are.
IslandNorth StardewValley.Locations.IslandNorth Ginger Island, Island North, where the volcano and Professor Snail's tent are.
IslandHut StardewValley.Locations.IslandHut The interior of Leo's hut on Ginger Island.
IslandWestCave1 StardewValley.Locations.IslandWestCave1 The Ginger Island cave where the colored crystals puzzle can be found.
IslandNorthCave1 StardewValley.Locations.IslandLocation The mushroom cave on Ginger Island where Professor Snail is initially blocked in by a boulder.
IslandFieldOffice StardewValley.Locations.IslandFieldOffice The interior of Professor Snail's Island Field Office tent.
IslandFarmHouse StardewValley.Locations.IslandFarmHouse The interior of the farm house on Ginger Island.
CaptainRoom StardewValley.Locations.IslandLocation The interior of the shipwreck on Ginger Island West.
IslandShrine StardewValley.Locations.IslandShrine The area East of the jungle on Ginger Island.
IslandFarmCave StardewValley.Locations.IslandFarmCave The interior of Gourmand Frog's cave on Ginger Island.
Caldera StardewValley.Locations.Caldera The volcano caldera on Ginger Island at the end of the volcano dungeon.
LeoTreeHouse StardewValley.GameLocation Leo's tree house home.
QiNutRoom StardewValley.Locations.IslandLocation Mr. Qi's Walnut Room
See also
Modding:Location contexts
Category: Modding