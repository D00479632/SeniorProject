Jump to navigation
Jump to search
←Index
This page is a quick reference for how to use Visual Studio 2017 or MonoDevelop/Visual Studio for Mac when creating or editing a SMAPI mod. See Modding:Modder Guide for the main guide.
Contents
1 Before you start
2 Create a mod project
2.1 Windows (Visual Studio 2019/2022)
2.2 Windows/Mac/Linux (Rider 2024.x.x)
2.3 Linux (MonoDevelop)
2.4 MacOS (Visual Studio 2019 for Mac)
2.5 MacOS (Visual Studio for Mac)
3 Set the target framework
3.1 In Windows Visual Studio 2019/2022
3.2 In Visual Studio 2019 for Mac
3.3 In MonoDevelop/Visual Studio for Mac
4 Add a file
4.1 In Visual Studio 2017
4.2 In MonoDevelop/Visual Studio for Mac
5 Delete a file
5.1 In Visual Studio 2017
5.2 In MonoDevelop/Visual Studio for Mac
6 Add a NuGet package
6.1 In Visual Studio Code
6.2 In Visual Studio 2019/2022
6.3 In Visual Studio 2019 for Mac
6.4 In MonoDevelop/Visual Studio for Mac
7 Edit project file (.csproj)
7.1 In Visual Studio 2017
7.2 In MonoDevelop/Visual Studio for Mac
8 Find compiled files
8.1 In Visual Studio 2017
8.2 In MonoDevelop/Visual Studio for Mac
9 Add a reference to another DLL
9.1 In Visual Studio 2017
9.2 In Rider
Before you start
You should install Visual Studio Community (Windows), MonoDevelop (Linux), or Visual Studio for Mac (Mac).
Reviewing C# Fundamentals for Absolute Beginners is strongly recommended if you're new to programming C#.
Here are some basic terms to remember:
term definition
IDE The program used to edit, run, and compile your code (short for Integrated Development Environment). The main IDEs are Visual Studio on Windows, and MonoDevelop/Visual Studio for Mac on Linux/Mac.
DLL The file with a .dll extension which contains your compiled code (short for Dynamic Link Library). This is the file that SMAPI reads when loading your mod.
project A collection of source code + configuration + resources (like images) you edit in the IDE. Each project is compiled into its own DLL.
solution A collection of projects with some global settings. The solution itself isn't compiled, but it enables some convenient features (like letting projects easily reference each other).
Create a mod project
Before you can write your mod code, you need to create a solution and project to contain it.
Windows (Visual Studio 2019/2022)
Open Visual Studio 2019/2022.
Click Create a new project from the start screen.
Filter by "C#" and "Library", then choose Class Library and click Next. Make sure you don't choose Class Library (.NET Framework) which won't work.
In the configure your new project window:
Enter a descriptive mod name. By convention, the name should be one word with mixed caps (like "PineapplesEverywhere").
Make sure "Place solution and project in the same directory" is not checked.
Click "Create" to to create the project.
Next, select NET 6.0 and click "Create" to create the project. For VS 2022, this will be on the next page.
Windows/Mac/Linux (Rider 2024.x.x)
Open Rider.
Click New Solution from the project selection window. Rider may open to your previously opened project instead. If this is the case, click on File, and New Solution.
Click Class Library in the left pane.
Click where it says from <SDK version>.
Select SDK 6.0 so you can create a .NET 6.0 project.
Select net6.0 in the dropdown to the right of Target framework.
Click the Create button.

Linux (MonoDevelop)
Open MonoDevelop.
Click File » New Solution from the menu bar:
In the 'New Project' window, choose .NET » Library and click Next:
Enter a descriptive mod name. By convention, the name should be one word with mixed caps (like "PineapplesEverywhere"):
Make sure "create a project directory within the solution directory" is checked, and click Create:
MacOS (Visual Studio 2019 for Mac)
Install the .NET 6.0 SDK if you haven't already (check here for your system).
Open Visual Studio for Mac.
Click File » New Solution from the menu bar:
Select the correct type of class library:
Set it to target .NET 6.0.:
Enter a descriptive mod name for the project. By convention, the name should be one word with mixed caps (like "PineapplesEverywhere"):
MacOS (Visual Studio for Mac)
Open Visual Studio for Mac.
Click File » New Solution from the menu bar:
In the 'New Project' window, choose .NET » Library and click Next:
Enter a descriptive mod name. By convention, the name should be one word with mixed caps (like "PineapplesEverywhere"):
Make sure "create a project directory within the solution directory" is checked, and click Create:
Set the target framework
The 'target framework' is the version of .NET your code uses, which affects the version needed to run your mod. The recommended target framework is .NET 6.0, which is the version SMAPI itself targets. Please find the subsection below for your OS (Windows/Mac).
In Windows Visual Studio 2019/2022
NOTE: Visual Studio 2017 MAY no longer be compatible with creating mods! If you followed Modding:Modder_Guide/Get_Started and receive errors, from the code that page instructed be copy and pasted, with regards to helper. Events in the Entry(IModhelper helper) method and ButtonPressedEventArgs from the Entry(IModHelper helper) method, try the project-creation and code-copy/paste process again with Visual Studio 2019/2022 instead.

Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer, right-click on the project and choose Properties:
On the Application tab, change the Target Framework dropdown to .NET 6.0:
A dialogue may appear asking you to confirm the change. Click 'Yes' to confirm:
In Visual Studio 2019 for Mac
If you followed the instructions above to set up your project, your framework should already be set to .NET 6.0. However, if you picked the wrong class library or you just want to check, you can follow these steps to look at the .csproj file, which is basically equivalent to setting it manually. (If you're checking that it worked, don't replace the .csproj, just check it refers to .NET 6.0.)
Unfortunately there doesn't appear to be a way to change the target framework using the GUI. However, it is very easy to follow the 1.5.5 migration guide steps:
Open the .csproj file for editing:
Replace your mod's .csproj file with this (where EXAMLE_MOD_NAME is your solution's name):
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>EXAMPLE_MOD_NAME</AssemblyName>
    <RootNamespace>EXAMPLE_MOD_NAME</RootNamespace>
    <Version>1.0.0</Version>
    <TargetFramework>net6.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Pathoschild.Stardew.ModBuildConfig" Version="4.0.0" />
  </ItemGroup>
</Project>
If the mod uses Harmony, add <EnableHarmony>true</EnableHarmony> to the property group.
In MonoDevelop/Visual Studio for Mac
This section is out of date for Stardew Valley 1.5.5. It appears you cannot change the .NET framework in this way with Visual Studio 2019 and Stardew Valley 1.5.5.
Open the Solution pad. If it's not visible, click View » Pads » Solution from the menu:
From the Solution pad, right-click on the project and choose Options:
On the Build » General tab, change the Target Framework dropdown to Mono / .NET 6.0:
Add a file
In Visual Studio 2017
Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer pane, right-click on the project and choose Add » New Item:
From the 'Add New Item' window, choose the file type (usually Visual C# Item » Class):
Enter a descriptive file name and click Add:
In MonoDevelop/Visual Studio for Mac
Open the Solution pad. If it's not visible, click View » Pads » Solution from the menu:
From the Solution pad, right-click on the project to delete and choose Add » New File:
From the 'New File' window, choose the file type (usually General » Empty Class):
Enter a descriptive file name and click New:
Delete a file
In Visual Studio 2017
Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer pane, right-click on the file to delete and choose Delete:
In MonoDevelop/Visual Studio for Mac
Open the Solution pad. If it's not visible, click View » Pads » Solution from the menu:
From the Solution pad, right-click on the file to delete and choose Remove:
Add a NuGet package
In Visual Studio Code
As of August 31, 2024, Visual Studio is now retired for Mac. You may be using Visual Studio Code to edit your game files now. As of right now, the built-in Nuget Package Manager with the C# Dev Kit does not work with SDK 6.0. You can download another extension called "Nuget Package Manager GUI" by aliasadidev and the flow will be similar to the process below for Visual Studio 2019. If you do not want to download this, you can use the Terminal below.
With your Project open, open a new Terminal in Visual Studio Code.
Type in ```dotnet add StardewValleyMod25 package Pathoschild.Stardew.ModBuildConfig``` to the terminal and press enter.
You should get a bunch of log messages like in the picture below.
adding StardewModdingApi nuget package to your project
In Visual Studio 2019/2022
Click Tools » NuGet Package Manager » Manage NuGet Packages for Solution from the menu:
Note: if the nuget package manager is missing, you can add it as a package source with the following steps: https://stackoverflow.com/questions/37293242/nuget-package-manager-no-packages-found-even-though-the-package-exists
On the Browse tab, search for the package and click on the result to display some options:
In the options, check the box next to your project and click Install:
If a 'Review Changes' dialogue appears, click OK:
In Visual Studio 2019 for Mac
Click Project » Manage NuGet Packages... from the menu:
Search for the package, click on the result, and click Add Package:
Quit and relaunch Visual Studio.
In MonoDevelop/Visual Studio for Mac
Click Project » Add NuGet Packages from the menu:
Search for the package, click on the result, and click Add Package:
Edit project file (.csproj)
Sometimes you may want to edit the project file directly (mainly to configure build steps). The project is a .csproj file, and can be edited from within the IDE.
In Visual Studio 2017
Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer pane, right-click on the project and choose Unload:
Right-click on the project again and choose Edit <project name>.csproj:
Make your changes in the editor that appears and save.
When you're done, right-click on the project again and choose Reload Project:
In MonoDevelop/Visual Studio for Mac
Open the Solution pad. If it's not visible, click View » Pads » Solution from the menu:
From the Solution pad, right-click on the project and choose Tools » Edit File:
Make your changes in the editor that appears and save.
Find compiled files
In Visual Studio 2017
Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer pane, right-click on the project and choose Open Folder in File Explorer:
Navigate to bin\Debug (or bin\Release if you switched to release build configuration).
In MonoDevelop/Visual Studio for Mac
Open the Solution pad. If it's not visible, click View » Pads » Solution from the menu:
From the Solution pad, right-click on the project and choose Open Containing Folder:
Navigate to bin/Debug (or bin/Release if you switched to release build configuration).
Add a reference to another DLL
In Visual Studio 2017
Open the Solution Explorer pane. If it's not visible, click View » Solution Explorer from the menu:
From the Solution Explorer pane, right-click on References and choose Add Reference...:
From the 'Reference Manager' window, choose Browse in the left side, then click Browse.. at the bottom:
Find the DLL you want to reference, select it, and click Add:
From the 'Reference Manager' window, click OK:
In Rider
When opening a project for the first time, you must add a reference to StardewModdingAPI.dll for code completion to work.
In the Explorer panel, select the Solution view
Under the project, right-click on Dependencies and choose Reference...
In the Add Reference window, click Add From... at the bottom
Find the DLL you want to reference, select it, and click OK
Category: Modding