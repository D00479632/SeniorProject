Jump to navigation
Jump to search
‚ÜêIndex
This page is for mod authors. Players: see the mod compatibility list instead.

This page explains how to update your mods for compatibility with Stardew Valley 1.6.9, and documents some of the changes and new functionality. See also Migrate to Stardew Valley 1.6.
Contents
1 FAQs
1.1 What's changing?
1.2 Is this the modapocalypse?
1.3 How to update your mod
2 Changes for all mods
2.1 Lost items shop
2.2 Dialogue changes
2.3 Game state query changes
2.4 Debug command changes
2.5 Translation changes
2.6 Building data changes
2.7 Farm animal data changes
2.8 Fish pond data changes
2.9 Item data changes
2.10 Machine data changes
2.11 Map property changes
2.12 Map tile index logic is now safer
2.13 Pet data changes
2.14 Tokenizable string changes
2.15 Tool data changes
2.16 Trigger action changes
2.17 Other changes
3 Changes for C# mods
3.1 Player changes
3.2 Chat commands API
3.3 Screen reader changes
3.4 Light source revamp
3.5 Quest event revamp
3.6 New extension methods
3.7 SyntaxAbstractor
3.8 TranslationValidator
3.9 Utility fields & methods
3.10 New constants
3.11 ForEachItem changes
3.12 OutputMethod changes in Data/Machines
3.13 Other changes
4 Changes for SMAPI and external tools
4.1 Content hashes
5 Name translation changes for wiki maintainers
5.1 Objects
5.2 Furniture
5.3 Hats
5.4 Movie concessions
5.5 Pants
5.6 Shirts
5.7 Tools
5.8 Weapons
5.9 Animals
5.10 Buildings
5.11 Monsters
5.12 Movies
5.13 NPCs
6 XNB impact
6.1 Overview
6.2 Changed assets
6.3 Removed unused assets
7 See also
FAQs
What's changing?
Stardew Valley 1.6.9 contains many smaller changes for mods after the major 1.6 update.
Is this the modapocalypse?
SMAPI compatibility over time. The Stardew Valley 1.6.9 release appears as a small drop in November 2024.
No. The vast majority of mods should be unaffected by the changes in 1.6.9, and SMAPI will automatically rewrite most mods that are.
How to update your mod
Most mods won't need any changes. Here's a suggested 'quick start' guide to update a mod for Stardew Valley 1.6.9.
For C# mods:
If you haven't already, update the mod for Stardew Valley 1.6.0.
Rebuild the solution.
Fix any build errors. You can search this page for relevant info as needed.
Test to make sure the mod works.
Skim through the changes below, and check any section that might be relevant to the mod.
For Content Patcher packs:
If you haven't already, follow the Content Patcher migration guide until your content pack has "Format": "2.5.0".
Do not skip this step! Content Patcher will assume your content pack is pre-1.6 if you don't, which can cause confusing errors if you already updated it.
Skim through the changes below, and check any section that might be relevant to the mod.
For content packs which use another framework:
See the documentation for the framework mod. Often you won't need to update the content pack if the framework mod itself was updated.
Changes for all mods
Lost items shop
See the updated docs at Modding:Lost items shop. The section below focuses on what's new in this version.
1.6.9 adds a hidden shop in the secret woods which sells unique items you've already unlocked but no longer own. For example, the soda machine is received from the JojaMart completion event; if you lose it, it would otherwise be gone forever. All items are sold for a flat 10,000g price.
The items which can appear in the shop are listed in the new Data/LostItemsShop asset, which consists of a list of models with these fields:
field effect
Id The unique string ID for this entry.
ItemId The qualified item ID of the item to add to the shop.
RequireMailReceived
RequireEventSeen The requirement for this item to be added to the shop.
You can specify either RequireMailReceived (a mail flag to match in players' received mail) or RequireEventSeen (an event ID players have seen). If you specify both, only RequireMailReceived is used.
The number added to the shop is the number of players which match this field minus the number of the item which exist in the world. For example, if three players found the 'Boat' painting but only one exists in the world, the shop will sell two 'Boat' paintings.
Dialogue changes
See the updated docs at Modding:Dialogue. The section below focuses on what's new in this version.
1.6.9 adds several new dialogue keys:
asset key format description
Characters/Dialogue/<name> AcceptBirthdayGift_<taste>_<context tag> (Optional) Shown when the NPC receives a birthday gift with the specified gift taste and context tag. See AcceptGift_<taste> for valid gift tastes.
This is checked immediately before the AcceptBirthdayGift_<context tag> key added in 1.6.
AcceptGift_<taste>_<context tag> (Optional) Shown when the NPC receives a non-birthday gift with the specified gift taste and context tag. See AcceptGift_<taste> for valid gift tastes.
This is checked immediately before the AcceptGift_<context tag> key added in 1.6.
AcceptGift_<taste> (Optional) Shown when the NPC receives a gift with the specified gift taste. The <taste> can be a specific taste level (Loved, Liked, Neutral, Disliked, or Hated), Positive (neutral/liked/loved), or Negative (disliked/hated).
This is checked after all AcceptGift_* keys added in 1.6.
AcceptGift (Optional) Shown when the NPC receives a non-birthday gift, if no other AcceptGift_* dialogue key was found.
RejectBouquet_AlreadyAccepted_Engaged
RejectBouquet_AlreadyAccepted_Married
RejectBouquet_AlreadyAccepted (Optional) Shown when the player gives a bouquet to an NPC who already accepted one from them.
RejectMermaidPendant_AlreadyAccepted_Engaged
RejectMermaidPendant_AlreadyAccepted_Married
RejectMermaidPendant_AlreadyAccepted (Optional) Shown when the player gives a mermaid's pendant to an NPC who already accepted one from them.
RejectRoommateProposal_AlreadyAccepted
RejectRoommateProposal_NpcWithSomeoneElse
RejectRoommateProposal_PlayerWithSomeoneElse
RejectRoommateProposal_LowFriendship
RejectRoommateProposal_SmallHouse (Optional) Shown when the NPC rejects a roommate proposal because the player doesn't meet a specific requirement:
AlreadyAccepted: the NPC is already a roommate with this player.
NpcWithSomeoneElse: the NPC is already a roommate with another player.
PlayerWithSomeoneElse: the player making the proposal already has a roommate.
LowFriendship: the player doesn't have 10+ hearts with the NPC.
SmallHouse: the player hasn't upgraded their house yet.
RejectRoommateProposal (Optional) Shown when the NPC rejects a roommate proposal, if a more specific RejectRoommateProposal_* dialogue wasn't found.
When using the $y dialogue command, you can now escape asterisks. For example, A*B will split A and B into separate dialogue boxes like before, but A**B will be shown with a single literal asterisk.
Game state query changes
See the updated docs at Modding:Game state queries. The section below focuses on what's new in this version.
1.6.9 adds some new game state queries:
Condition effect
DATE_RANGE <min season> <min day> <min year> [max season] [max day] [max year] Whether the calendar date is within the specified range, inclusively. The max values default to winter (season), 28 (day), and unlimited (year) if omitted.
For example, between summer 15 and winter 15 in year one:
DATE_RANGE Summer 15 1 Winter 15 1
Or fall 15 or later:
DATE_RANGE Fall 15 1
PLAYER_BASE_COMBAT_LEVEL
PLAYER_BASE_FARMING_LEVEL
PLAYER_BASE_FISHING_LEVEL
PLAYER_BASE_FORAGING_LEVEL
PLAYER_BASE_LUCK_LEVEL
PLAYER_BASE_MINING_LEVEL Same as the non-BASE queries, but ignores buffs which change skill levels.
PLAYER_HAS_TRINKET <player>+ <trinket ID>+ Whether the specified player(s) have one of the listed trinkets equipped. Each ID can be a qualified or unqualified item ID.
You can now check multiple values in more queries, like PLAYER_HAS_CAUGHT_FISH Current 128 139 for pufferfish or salmon. This affects PLAYER_HAS_BUFF, PLAYER_HAS_CAUGHT_FISH, PLAYER_HAS_CONVERSATION_TOPIC, PLAYER_HAS_DIALOGUE_ANSWER, PLAYER_HAS_HEARD_SONG, PLAYER_HAS_RUN_TRIGGER_ACTION, PLAYER_HAS_SEEN_EVENT, PLAYER_SPECIAL_ORDER_ACTIVE, PLAYER_SPECIAL_ORDER_RULE_ACTIVE, and PLAYER_SPECIAL_ORDER_COMPLETE.
Debug command changes
See the updated docs at Modding:Console commands. The section below focuses on what's new in this version.
All debug commands now validate their arguments.
Improved error-handling in many cases.
1.6.9 adds some new debug command:
command description
listLights Show debug info about all currently active light sources.
logWallAndFloorWarnings Enable debug logs when applying wallpaper and flooring to a farmhouse (or other decoratable location) to help troubleshoot cases where they don't work with a custom map. You'd usually enable this before loading the save.
netJoin <IP> Connect to a given IP address.
This replaces the former netJoin command which opened the join menu.
performTitleAction <button>
pta <button> While on the title screen, jump to a given title submenu.
toggleNetCompression Disable (or re-enable) multiplayer compression.
toggleTimingOverlay
tto Show an on-screen overlay with basic timing info (e.g. draw loop times) to help with performance profiling.
whereIsItem,
whereItem List all items matching the given item ID or name in the save.
For example:
> debug whereItem "Watering Can"

Found 1 item matching name 'Watering Can':
- Farm > Shed at 50, 14 > Shed149bae63-2add-4ab6-a5aa-b3bd76372004 > Chest at 4, 4 > Watering Can ((T)CopperWateringCan)
worldMapPosition [includeLog] Show detailed info to help troubleshoot world map positioning data. If [includeLog] is true, it will print a detailed log of how the current position was determined based on the Data/WorldMap entries.
These have been removed:
command notes
buildCoop Replaced by debug build coop.
These have been improved:
command changes
achieve This now unlocks the related trophy when run on a console.
build The building type is now case-insensitive, and will list fuzzy matches if an exact match isn't found.
event The dontClearEvent option (default false) has been replaced by clearEventsSeen (default true), and no longer treats any value as true.
furniture Now allows non-numeric furniture IDs.
growCrops Now affects crops in garden pots.
holdItem Added an optional [showMessage] boolean argument to show the item-received message after playing the hold-item animation.
item The item ID argument is now required.
mineLevel Added an optional [layout] argument, which can be set to the layout number in Content/Maps/Mines. For example, debug mineLevel 101 47 warps to mine level 101 using layout 47.
setUpFarm The clearMore argument no longer treats any value as true.
spreadSeeds Now affects crops in garden pots.
warpCharacterTo Added a separate argument for the NPC's facing direction, instead of using the Y argument.
water Now affects crops in garden pots.
Translation changes
Many of the 1.6 translations were moved from Strings/1_6_Strings into Strings/BigCraftables, Strings/Objects, and Strings/Tools.
Tool names/descriptions were moved from Strings/StringsFromCSFiles into a new Strings/Tools asset. Dynamic tool names (like "Gold {0}") have also been replaced by specific names (like "Gold Axe") to allow fixing awkward translations.
Building data changes
These docs should be merged into Modding:Buildings. When copying content, make sure you attribute the original authors.
1.6.9 adds new fields in Data/Buildings:
field effect
NameForGeneralType
(in Stardew Valley 1.6.15) (Optional) A tokenizable string for the display name which represents the general building type, like 'Coop' for a Deluxe Coop. For example, this can be shown in Robin's started-construction dialogue. If omitted, it defaults to the Name field.
IndoorItems This already existed before 1.6.9, but has one new sub-field:
field effect
ClearTile (Optional) Whether to remove any item on the target tile, except for one matching the indoor item's ItemId. The previous contents of the tile will be moved into the lost and found if applicable. Default true.
Farm animal data changes
See the updated docs at Modding:Animal data. The section below focuses on what's new in this version.
1.6.9 adds a new field in Data/FarmAnimals:
field effect
Shadow (Optional) The shadow to draw under the farm animal, if a more specific field like ShadowWhenAdult doesn't apply. Defaults to omitted.
The previously hardcoded stats (cowMilkProduced, goatMilkProduced, and sheepWoolProduced) are now incremented via the StatToIncrementOnproduce data field.
Fish pond data changes
See the updated docs at Modding:Fish ponds. The section below focuses on what's new in this version.
Added new fields:
field effect
MaxPopulation (Optional) The maximum number of fish that can live in this pond, whether added manually or through population growth. This can't exceed the hardcoded maximum of 10. If omitted, defaults to the maximum based on PopulationGates.
WaterColor (Optional) The color tint to apply to the water when this entry applies. If multiple are specified, the first matching entry is applied. If none match, the default water color is used.
This consists of a list of models with these fields:
field effect
Id The unique string ID for this entry.
Color (Optional) The water color to apply. This can be a standard color value, or CopyFromInput (to use the item color from the fish item data). Default none.
MinPopulation (Optional) The minimum number of fish in the pond before this color applies. Default 1.
MinUnlockedPopulationGate (Optional) The minimum population for the last population gate that was unlocked, or 0 for any value. Default 0.
Condition (Optional) A game state query which indicates whether this entry should be applied. Defaults to always true.
ProducedItems This field already existed, but now has item spawn fields, conditions, and Id:
field effect
Id The unique string ID for this entry.
common fields See item spawn fields for the generic item fields supported by fish pond rewards.
Notes:
If ItemId or RandomItemId is set to an item query which returns multiple items, one item will be selected at random.
If ItemId and RandomItemId is set to the exact string (O)812 (roe), it will produce roe for the current fish.
For the Condition field, the input item matches the fish living in the pond.
The former MinQuantity/MaxQuantity fields are now obsolete, and replaced by the standard MinStack/MaxStack item spawn fields. For content packs which set the old fields, the value will be applied to the new ones automatically instead.
Item data changes
In Data/Objects
See the updated docs at Modding:Objects. The section below focuses on what's new in this version.
Added a new field:
field effect
ColorOverlayFromNextIndex (Optional) When drawn as a colored object, whether to apply the color to the next sprite in the spritesheet and draw that over the main sprite. If false, the color is applied to the main sprite instead. Default false.
Object buffs can now also set these buff attributes: CombatLevel, AttackMultiplier, CriticalChanceMultiplier, CriticalPowerMultiplier, Immunity, KnockbackMultiplier, WeaponPrecisionMultiplier, and WeaponSpeedMultiplier.
Flavor name translations like Wine_Flavored_Name can use a new {1} token for the lowercase name.
You can now customize the display name for specific flavor items. For example, the Wine_Flavored_(O)282_Name translation ("Cranberry Wine") overrides Wine_Flavored_Name ("{0} Wine").
Item spawn fields
These docs should be merged into Modding:Item queries#Item spawn fields. When copying content, make sure you attribute the original authors.
1.6.9 adds a new field for all item spawn fields:
field effect
ObjectColor (Optional) The tint color to apply to the produced item. Default none.
Other
For C# mods, the Object.displayNameFormat field can now use two new tokens: %DISPLAY_NAME_LOWERCASE and %PRESERVED_DISPLAY_NAME_LOWERCASE.
Machine data changes
These docs should be merged into Modding:Machines. When copying content, make sure you attribute the original authors.
1.6.9 fixes some issues with Data/Machines:
The PreserveId field now supports the DROP_IN_PRESERVE token.
The CopyColor field now works for any input item, even if it's not a ColoredObject (in which case it uses the color from its context tags).
The CopyQuality field no longer disables QualityModifiers; those are now applied to the result of the copy.
Map property changes
These docs should be merged into Modding:Maps. When copying content, make sure you attribute the original authors.
1.6.9 adds new map properties:
property explanation
AllowBeds <allowed>
AllowMiniFridges <allowed> Whether beds or mini-fridges can be placed in this location. This can be true or false. If specified, this bypasses the usual specific requirements (e.g. farmhouse upgrade level), though general furniture restrictions still apply (e.g. the 'placement restriction' field in Data/Furniture).
Map tile index logic is now safer
Vanilla logic that checks for a map tile index now consistently checks the tilesheet ID (case-insensitively), which eliminates the entire class of bugs related to tile index collisions. (This doesn't apply to Paths layer indexes, to avoid breaking mods and because you shouldn't have custom tilesheets on that layer anyway.)
For example, the vanilla beach code in 1.6.8 does this:
switch (getTileIndexAt(tileLocation, "Buildings"))
{
    case 284:
        if (who.Items.ContainsId("(O)388", 300))
            createQuestionDialogue(Game1.content.LoadString("Strings\\Locations:Beach_FixBridge_Question"), createYesNoResponses(), "BeachBridge");
        else
            Game1.drawObjectDialogue(Game1.content.LoadString("Strings\\Locations:Beach_FixBridge_Hint"));
        break;
So if you added a custom tilesheet to the map, any tile with index 284 would show that message (even if it was from your custom tilesheet).
That no longer happens in 1.6.9, since it only recognizes the tile index from the relevant tilesheet:
switch (getTileIndexAt(tileLocation, "Buildings", "untitled tile sheet")) // "untitled tile sheet" is the actual tilesheet ID in this case
Pet data changes
These docs should be merged into Modding:Pets. When copying content, make sure you attribute the original authors.
In Data/Pets, the Gifts field now uses item spawn fields (including conditions and item quality/color/name/etc). The previous QualifiedItemID and Stack fields are now deprecated, but content packs which set them should still work.
Tokenizable string changes
These docs should be merged into Modding:Tokenizable strings. When copying content, make sure you attribute the original authors.
Added new tokens:
token format output
[CapitalizeFirstLetter <text>] The input text, with the first letter capitalized.
[ItemNameWithFlavor <flavor type> <flavor ID>] The translated display name for a flavored item name, where...
<flavor type> is one of AgedRoe, Bait, DriedFruit, DriedMushroom, Honey, Jelly, Juice, Pickle, Roe, SmokedFish, or Wine;
<flavor ID> is the qualified or qualified item ID for the flavor (e.g. the blueberry in blueberry wine).
For C# mods with custom tokens, parsers now receive argument values with any escape characters from [EscapedText] stripped back out.
Tool data changes
In Data/Tools, the ApplyUpgradeLevelToDisplayName field no longer exists. Every tool now has its own name instead (see translation changes).
Trigger action changes
These docs should be merged into Modding:Trigger actions. When copying content, make sure you attribute the original authors.
1.6.9 adds a new field in Data/TriggerActions:
field effect
SkipPermanentlyCondition (Optional) If set, a game state query which indicates that the action should be marked applied when this condition matches. This happens before Condition, Action, and Actions are applied.
This mainly allows optimizing cases where the action will never be applied, to avoid parsing the Condition each time.
Other changes
In Stardew Valley 1.6.9:
The game now always finds map tilesheets by ID, which eliminates bugs due to mods reordering tilesheets. However, it'll still try to get it by index first in some cases (since that's faster), so you should still avoid changing the tilesheet order to avoid the performance impact of falling back to an ID lookup.
The 'Jewels Of The Sea' book now only produces roe for fish with the new fish_has_roe context tag. Consider adding it for custom fish in Data/Objects if needed.
Added generic support for receiving recipe items from any source.
Added player stats to track how often the player finished Junimo Kart (completedJunimoKart) and Prairie King (completedPrairieKing and completedPrairieKingWithoutDying). For pre-1.6.9 saves, the first two are set to 1 if the player has finished them at least once.
Error messages related to argument parsing (e.g. in debug commands, dialogue, event commands, map properties, etc) now also show a human-readable argument name. For example, "required index 0 not found" now shows something like "required index 0 (string itemId) not found".
Any item type can now be shipped, subject to its item.canBeShipped() method.
For events:
Fixed move command ignoring all remaining NPCs if an optional NPC isn't found.
Fixed speak command ending the event if an optional NPC isn't found.
Fixed GameStateQuery/G event precondition not handling quoted arguments correctly.
For items:
Context tags are now case-insensitive in nearly all cases.
Merged item name translations from Strings/1_6_Strings + Strings/StringsFromCSFiles into Strings/BigCraftables, Strings/Objects, and Strings/Weapons.
Fixed ancient dolls not having the doll_item context tag.
Fixed spirit & custom torches switching to default torch sprite on purchase or stack split.
Fixed cases where item names could be set to null. Trying to do so now defaults the name to Error Item instead.
For item spawn fields:
Added Color to set the tint color.
Fixed vague error when producing a null item ID.
For tools:
Unified tool names/descriptions from Strings/StringsFromCSFiles + Strings/1_6_Strings into a new Strings/Tools asset, with readable keys like Axe_Description.
Each tool upgrade now has its own translation (like "Gold Axe"), instead of generic ones like "Gold {0}" which were hard to translate well. This removes the ApplyUpgradeLevelToDisplayName field in Data/Tools.
Fixed tool.getOne() not copying some tool fields.
For trinkets:
Added CustomFields and ModData data fields for mod use. These replace the former TrinketMetadata field.
Added data fields to configure the locations/monsters ignored by magic quivers.
Added error handling for some invalid data.
For game state queries:
Fixed HAS_TARGET_LOCATION always returning true.
Fixed PLAYER_HAS_ITEM counting Qi gems owned by the main player instead of the target player.
For machines:
Geode crushers now handle mystery boxes correctly if a mod enables them in geode crushers.
Fixed some machine effects only applied on the next time change after a machine begins processing.
Fixed Data/Machines' DROP_IN_PRESERVE not working in the PreserveId field.
Fixed Data/Machines' CopyColor field doing nothing if the input isn't a ColoredObject; it now defaults to the color from its context tags.
Fixed Data/Machines' quality modifiers ignored for entries with CopyQuality.
Fixed Object.OutputAnvil ignoring its probe argument.
Fixed wild honey producing invalid item names when using tokens like DROP_IN_PRESERVE or %PRESERVED_DISPLAY_NAME in Data/Machines.
For maps:
Terrain sounds like footsteps now work in locations with the TreatAsOutdoors map property too.
Wallpaper and flooring can now be applied to custom map tiles if their tilesheet ID contains walls_and_floors.
The TouchAction ConditionalDoor tile property now correctly gets its LockedDoorMessage from the Back layer, instead of the Buildings layer.
Fixed bugs related to mods changing maps' tilesheet order.
Fixed tile index collisions. Vanilla logic that checks for a map tile index now consistently checks the tilesheet ID (case-insensitive), which eliminates the entire class of bugs related to tile index collisions (e.g. custom tilesheet tiles being unexpectedly treated as lights).
Fixed inconsistent map tilesheet sort order between platforms.
For NPCs and dialogue:
When loading a save, NPCs now warp to their current home in Data/Characters if the location they were in before saving no longer exists. (This also works for NPCs using a former name listed in the FormerCharacterNames field.)
When using the $y dialogue command, you can now escape asterisks (* is still a dialogue break, but ** is now shown as a single literal asterisk).
You can now override schedule/resort dialogue based on your relationship with the NPC. For example, rain.000_Married overrides rain.000 if you're married to that NPC. The possible relationships are Friendly, Dating, Engaged, Married, and Divorced.
Improved error-handling when an NPC can't find a suitable dialogue.
Fixed $action dialogue command not working after a #$b# break.
Fixed empty dialogue box shown if a command is between #$b# breaks.
Fixed NPCs no longer applying AcceptGift_<id> dialogue key.
Fixed Data/Characters appearance options not weighted correctly by default.
Fixed some friendship logic still checking for a Data/NPCGiftTastes entry, instead of the CanSocialize field in Data/Characters.
For pets:
The Data/Pets' Gifts list now supports item spawn fields (including conditions and item quality/color/name/etc). The previous QualifiedItemID and Stack fields are now deprecated, but content packs which set them should still work.
Fixed a Data/Pets turtle gift ID to match what it actually gifts (Radish -> SeafoamPudding).
For desert festival makeover outfits:
You can now have gender-variant outfit parts within an outfit.
The Gender field now uses the three-part gender enum added in 1.6.
Every outfit part now has a descriptive Id.
For cooking/crafting recipes:
The format for a skill level condition is s <skill> <level> or <skill> <level>. Due to a quirk in how it was implemented, previously any string containing a skill name and level would work (like 10boopFarming); the format is now stricter and validated.
Fixed handling of qualified item IDs in the Data/CraftingRecipes output field.
Fixed skill-level-10 recipes being unlocked at level 1.
Removed unused assets and translations.
Wild seeds now choose their output when they're planted, so mods can predict their harvest.
Fixed support for gender-switch blocks in pass-out mail text.
Fixed crashes when player's daily luck is far outside the normal range. Daily luck is now clamped to reasonable values.
Fixed fish ponds ignoring the DrawShadow field in Data/Buildings.
Fixed StatIncrement fields in machine and farm animal data not using the specified ID.
Fixed AllowWakeUpWithoutBed map property not working consistently.
In Stardew Valley 1.6.15:
Improved building data:
Added a new NameForGeneralType field. This replaces the former hardcoded logic which tried to parse it from the Name.
Improved fish pond data:
You can now override a fish pond's base output chance via BaseMinProduceChance and BaseMaxProduceChance.
You can now prioritize output rules via the produced items' Precedence field.
The game no longer tries to auto-balance custom legendary fish in fish ponds. Mods can add their own output rule if they want to override the now-static default values.
Improved mannequin data:
Removed ID field (redundant with the entry key).
The CustomFields field is now null by default (like other assets).
Improved trinket data:
Removed the Id field (redundant with the entry key).
Changes for C# mods:
Marked more code public or virtual for mods.
The chest.sourceItem field is no longer null for fridge chests.
Added Game1.ResetGameStateOnTitleScreen() method, split from Game1.CleanupReturningToTitle(). These are specialized methods which most mods shouldn't call though.
Fixed NPC.CanSocializePerData not applying the given location.
Fixed farmhand.hasOrWillReceiveMail checking the main player's mailbox in some cases.
Fixed items' context tags not updated if their state changed (e.g. gold-quality items with the quality_none tag).
Robin's construction-started dialogues now have extra tokens for the non-lowercase building names.
Added optional argument to [GenderedText] and [SpouseGenderedText] tokens for non-binary text.
Added two variants of the locked-door message tile property: DoorUnlock_NotFriend_{npcName} (for a specific NPC) and DoorUnlock_NotFriend_Undefined (for non-binary NPCs).
The game's dynamic textures now set their Name field to simplify troubleshooting. These are shown in error messages like object-disposed errors.
The itemAboveHead event command now has an optional argument to set whether a 'you received' message is shown. This defaults to true (previously disabled for custom item IDs).
Removed some redundant platform-specific translations.
You can now customize the name/description for any item shown in the collection tab (via Strings/Objects:<item id>_CollectionsTabName and <item id>_CollectionsTabDescription).
Changes for C# mods
Player changes
The Game1.getFarmer and Game1.getFarmerMaybeOffline methods are now obsolete and should no longer be used. They've been replaced by a unified Game1.GetPlayer method. The old methods have inconsistent and sometimes counterintuitive behavior. For example, getFarmer(id) returns the main player if the target player is offline, which usually isn't the expected result. getFarmer also returns the main player given an invalid player ID, while getFarmerMaybeOffline returns null in that case. The new method matches offline players by default, returns null if the ID isn't found (so you can choose the best fallback behavior), and has full code docs and nullability annotations. To migrate existing code:
old code migration
Farmer player = Game1.getFarmer(id);
The exact equivalent is:
Farmer player = Game1.GetPlayer(id, onlyOnline: true) ?? Game1.MasterPlayer;
However, most mods probably didn't expect it to work that way. Consider whether you meant this instead:
Farmer? player = Game1.GetPlayer(id);
Farmer? player = Game1.getFarmerMaybeOffline(id);
This is directly equivalent to:
Farmer? player = Game1.GetPlayer(id);
The Game1.player setter is now internal. Setting it causes side-effects that are typically unexpected by mod authors, which led to frequent errors and crashes. These are explained in its new code docs. Mods can still set it via reflection if they really want to.
Chat commands API
These docs should be merged into Modding:Console commands. When copying content, make sure you attribute the original authors.
Chat commands are now modular and extensible in 1.6.9, with a new ChatCommands API to manage them.
For example, you can add a custom chat command like this:
string modId = this.ModManifest.UniqueId;
ChatCommands.Register($"{modId}_echo", this.Echo, name => $"{name} [message]: show the given message in the chat box.");

...

/// <inheritdoc cref="ChatCommandHandlerDelegate" />
private void Echo(string[] command, ChatBox chat)
{
    string message = ArgUtility.GetRemainder(command, 1);

    chat.addInfoMessage(message);
}
Screen reader changes
1.6.9 adds fields to support screen reader mods. These let mods with custom UI elements add information which can be shown to blind players, without requiring an integration with each screen reader mod.
The main change is a new interface:
/// <summary>A UI element that provides information for screen readers.</summary>
/// <remarks>These values aren't displayed by the game; they're provided to allow for implementing screen reader mods.</remarks>
public interface IScreenReadable
{
    /// <summary>If set, the translated text which represents this component for a screen reader. This may be the displayed text (for a text component), or an equivalent representation (e.g. "exit" for an 'X' button).</summary>
    string ScreenReaderText { get; }

    /// <summary>If set, a translated tooltip-like description for this component which can be displayed by screen readers, in addition to the <see cref="ScreenReaderText"/>.</summary>
    string ScreenReaderDescription { get; }

    /// <summary>Whether this is a purely visual component which should be ignored by screen readers.</summary>
    bool ScreenReaderIgnore { get; }
}
This is implemented by ClickableComponent and OptionsElement, so you can add screen reader data to most UI elements out of the box.
Light source revamp
1.6.9 revamps how light sources are tracked:
LightSource now has a required string ID (LightSource.Id), instead of the former optional numeric ID (LightSource.Identifier).
Game1.currentLightSources is now a dictionary by ID. (You can still write Game1.currentLightSources.Add(light) like before if you add using StardewValley.Extensions.)
Added unique IDs for every vanilla light source.
Added validation warnings and auto-recovery for some issues.
Added null handling in related helpers. For example, you can replace logic like if (light != null) Utility.repositionLightSource(light.Id, position) with Utility.repositionLightSource(light?.Id, position).
Added optional LightSource.onlyLocation field, which ensures that the light is only shown when viewing that location.
Added code docs.
Removed the TemporaryAnimatedSprite.light boolean field; the light is now enabled by setting the lightId field.
Quest event revamp
Previously, the game would call Game1.player.checkForQuestComplete with various arguments like string str and int number2, which had different behavior depending on the quest type.
These have been replaced with more specific methods like Quest.OnMonsterSlain, which...
are more intuitive to use;
receive more detailed info (e.g. the damage type when a monster is slain);
and let custom quests handle multiple event types (e.g. both item crafted and item received).
The Farmer method has been replaced with a single NotifyQuests method, which performs an action on each quest and returns whether any quest was updated.
Here's how the old Quest methods map to the new ones. (The Farmer methods are the same thing, but just add Game1.player.NotifyQuests(quest => ...) around them.)
old code new code
quest.checkForQuestComplete(npc, -1, -1, null, null, Quests.Quest.type_socialize)
quest.OnNpcSocialized(npc)
quest.checkForQuestComplete(null, -1, -1, null, buildingType, Quests.Quest.type_building)
quest.OnBuildingExists(buildingType)
quest.checkForQuestComplete(null, -1, numberCaught, null, itemId, Quest.type_fishing)
quest.OnFishCaught(itemId, numberCaught, size)
quest.checkForQuestComplete(null, -1, countAdded, item, null, Quest.type_harvest)
quest.checkForQuestComplete(null, -1, countAdded, item, null, Quest.type_resource)
quest.OnItemReceived(item, countAdded)
quest.checkForQuestComplete(npc, -1, -1, item, "", Quests.Quest.type_harvest, Quests.Quest.type_itemDelivery)
quest.OnItemOfferedToNpc(npc, item)
quest.checkForQuestComplete(null, 1, 1, null, monster.Name, Quests.Quest.type_monster)
quest.OnMonsterSlain(location, monster, killedByBomb, isHutchSlime)
quest.checkForQuestComplete(null, -1, -1, crafted, null, Quests.Quest.type_crafting)
quest.OnRecipeCrafted(recipe, crafted)
quest.checkIfComplete(null, -1, -2, null, location.name)
quest.OnWarped(location)
Two related changes:
Building quests are now represented by a new HaveBuildingQuest type which uses the above events.
The completionString field is now obsolete and unused; you should use the above methods instead.
New extension methods
The game has extension methods in the StardewValley.Extensions namespace. These add utility methods to more general types like strings.
1.6.9 adds some new extension methods:
method usage
Dictionary<TKey, TValue>.TryAddMany Add all the key/value pairs from another dictionary to this one, except for keys that already exist.
For example:
// before 1.6.9
Dictionary<string, string> fields = new();
if (obj.customFields != null)
{
    foreach ((string key, string value) in obj.customFields)
        fields.TryAdd(key, value);
}

// after 1.6.9
Dictionary<string, string> fields = new();
fields.TryAddMany(obj.customFields);
IList<T>.RemoveWhere Remove all elements from an arbitrary list that match a condition. This is equivalent to the RemoveWhere methods added in 1.6, but works on any list type.
Layer.HasTileAt(‚Ä¶)
Map.HasTileAt(‚Ä¶) Get whether there's a tile at a specific position on a map layer. This is equivalent to the pre-existing location.GetTileIndexAt(‚Ä¶) != -1.
Map.AddTileSheet(‚Ä¶) Add an arbitrary texture as a map tile sheet.
Map.RequireTileSheet(‚Ä¶) Get a map tilesheet by ID, and throw an exception if it doesn't exist.
string.ContainsIgnoreCase
string.EqualsIgnoreCase
string.IndexOfIgnoreCase
string.StartsWithIgnoreCase
string.EndsWithIgnoreCase Compare two strings case-insensitively.
For example:
// before 1.6.9
if (string.Equals(left, right, StringComparison.OrdinalIgnoreCase))
   ...

// after 1.6.9
if (left.EqualsIgnoreCase(right))
   ...
The new methods also handle null as you'd expect. For example, left.EqualsIgnoreCase(right) will be true if both are null.
SyntaxAbstractor
‚ö† This is highly specialized. It's meant for vanilla unit tests, so it may not handle non-vanilla text correctly and may change at any time.
The new SyntaxAbstractor class converts arbitrary text from content assets into language-independent syntax representations. These representations can be compared between languages to make sure they have the same sequence of commands, portraits, unlocalized metadata and delimiters, etc. This supports dialogue, event/festival, mail, and specific data formats.
For example:
SyntaxAbstractor abstractor = new();

// for an asset
string syntax = abstractor.ExtractSyntaxFor("Characters/Dialogue/Abigail", "Sun_old", "$p 17#I guess you think nothing would happen, right?$u|Maybe a wicked ghost would appear!"); // $p 17#text$u|text

// for a format
string syntax = abstractor.ExtractMailSyntax("Hey there!^I had some extra wood lying around... I thought maybe you could use it. Take care!  ^   -Robin %item id (O)388 50 %%[#]A Gift From Robin"); // text%item id (O)388 50%%[#]text

// for arbitrary delimited data
string customData = "SomeKey/Example Title/An example description./Robin (O)788 Forest 110 81/-1/true/Hey, nice to see you!$h";
int[] textFields = [1, 2];
int[] dialogueFields = [6];
string syntax = abstractor.ExtractDelimitedDataSyntax(customData, '/', textFields, dialogueFields); // SomeKey/text/text/Robin (O)788 Forest 110 81/-1/true/text$h
This is meant for unit tests that compare translations with the base text to make sure the basic format is the same. For unit tests, you'd usually use this through the TranslationValidator instead of directly.
TranslationValidator
The new TranslationValidator class compares translations to the original data, and returns a list of detected issues like missing or unknown keys, mismatched syntax, or malformed syntax (e.g. invalid gender-switch blocks).
For example, to validate a C# mod's translations:
// get translations
var translatedData = helper.Translation.GetTranslations().ToDictionary(p => p.Key);

// get base text
var baseData = new Dictionary<string, Translation>();
foreach (string key in translatedData.Keys)
{
    if (helper.Translation.GetInAllLocales(key).TryGetValue("default", out Translation? baseText))
        baseData[key] = baseText;
}

// assert all tests succeed
SyntaxAbstractor abstractor = new();
foreach (var issue in TranslationValidator.Compare(baseData, translatedData, element => element.Value, (key, value) => abstractor.ExtractDialogueSyntax(value)))
    Assert.Fail($"Validation failed for '{issue.Key}': {issue.SuggestedError}.");
Utility fields & methods
1.6.9 adds many new utility methods and fields. For example:
member usage
object dictionaries ‚Üí GetValueOrDefault(‚Ä¶) Object dictionaries (like GameLocation.objects) now implement the .NET GetValueOrDefault method, which lets you simplify common code:
// before 1.6.9
string? itemId = location.objects.TryGetValue(tile, out Object? obj)
    ? obj.ItemId
    : null;

// after 1.6.9
string? itemId = location.objects.GetValueOrDefault(tile)?.ItemId;
Buff.customFields The custom fields from the Data/Buffs and/or Data/Objects entry used to create the buff, if any.
Bush.readyForHarvest() Get whether this bush has berries or fruit to harvest.
ClickableTextureComponent.drawLabel Set whether the label should be drawn. This lets you add a label that's not rendered automatically.
ColoredObject.TrySetColor(‚Ä¶) Apply a tint color to an arbitrary item. This will change the input item directly if it's a ColoredObject, otherwise it'll create a new ColoredObject instance.
For example:
Item inputItem = ItemRegistry.Create("(O)128"); // pufferfish
if (ColoredObject.TrySetColor(inputItem, Color.Red, out ColoredObject? coloredObj)) // coloredObj = red pufferfish
   ...;
CrabPot.NeedsBait(player) Get whether the crab pot doesn't have bait, and bait is needed before it can catch anything based on the player's professions.
CraftingRecipe.TryParseLevelRequirement(‚Ä¶) Try to parse the skill level requirement from a raw cooking or crafting recipe data entry, if applicable.
Crop.replaceWithObjectOnFullGrown If set, the qualified object ID to spawn on the crop's tile when it's full-grown. The crop will be removed when the object is spawned.
Dialogue.GetFallbackForError(npc)
Dialogue.GetFallbackTextForError() Get a translated default "..." dialogue, which is shown in cases where a valid dialogue couldn't be loaded.
Event.TryResolveCommandName(‚Ä¶) Get the actual event command name which matches an input command or alias name. This can be used to resolve an alias (like mailReceived ‚Üí AddMailReceived) or normalize the capitalization (like itemnamed ‚Üí ItemNamed).
For example:
if (Event.TryResolveCommandName("mailRECEIVED", out string commandName))
    ...; // commandName = AddMailReceived
FarmAnimal.homeInterior The interior location for the animal's home building.
FarmHouse.GetFridgePositionFromMap() Get the position of the map fridge by scanning the map tiles. (Most code should use the cached fridgePosition field instead.)
FruitTree.GetCosmeticSeason() Get the season for which to show a fruit tree sprite (which isn't necessarily the season for which it produces fruit). This mainly lets mods override the logic.
Game1.IsHudDrawn Whether HUD elements like the toolbar are currently visible.
Game1.locationData A cached view of the Data/Locations asset.
GameLocation.CanWakeUpHere() Get whether a player can wake up in this location, instead of being warped home.
GameLocation.ForEachDirt(‚Ä¶) Perform an action for every tilled dirt in the location. You can optionally exclude dirt in garden pots.
For example:
Game1.currentLocation.ForEachDirt(dirt =>
{
    dirt.Pot?.Water();
    dirt.state.Value = HoeDirt.watered;
    return true;
});
GameLocation.GetHarvestSpawnedObjectQuality(‚Ä¶) Get the quality to set when harvesting a spawned object like forage.
GameLocation.GetAddedMapOverrideTilesheetId(‚Ä¶) Get the dynamic ID assigned to a tilesheet added via location.ApplyMapOverride(‚Ä¶).
GameLocation.removeMapTile(‚Ä¶) Remove a map tile on a given layer and position.
GameLocation.setMapTile(‚Ä¶) Add or overwrite a map tile on a given layer and position. You can optionally set an Action tile property at the same time. This copies any previous tile properties automatically, unless you set copyProperties: false.
This unifies the former setMapTile and setMapTileIndex methods. Note that it doesn't delete the tile if the index is set to -1; use removeMapTile to do that.
GameLocation.hasTileAt(‚Ä¶) Get whether there's a tile at a specific position on a map layer. This is equivalent to the pre-existing GetTileIndexAt(‚Ä¶) != -1.
GameLocation.OnHarvestedForage(‚Ä¶) Grant foraging or farming XP when the player harvests forage, and any other behavior defined by mods.
GameLocation.ParentBuilding The building which contains this location, if applicable. This replaces the former GetContainingBuilding() method, to avoid iterating the parent location's building list each time.
HoeDirt.Pot The garden pot which holds the dirt, if applicable. This is set automatically by the game.
Inventory.IsLocalPlayerInventory Whether this is the main inventory for Game1.player.
Inventory.Reduce(‚Ä¶) Reduce an item's stack size by this amount in the inventory, and optionally deduct any remainder from other items with the same ID in the inventory. This clears any affected slots if they reach a stack size of zero.
This is similar to player.reduceActiveItemByOne(), but works even if it's not the active item and allows reducing by an arbitrary amount. For example:
Item item = ...;
int countRemoved = Game1.player.Reduce(item, 5, reduceRemainderFromInventory: false);
Item.BaseName If the item's Name contains temporary dynamic changes like the " Recipe" suffix for a recipe, the item name without those changes.
Item.canBeShipped() Get whether this item can be put in the shipping bin. This replaces the former Object.canBeShipped(), and returning true now works with any item type.
Item.CopyFieldsFrom(otherItem) Copy all fields from another item into the current one. This is equivalent to item.getOne(), except that you update an existing item instead.
LocalizedContentManager.LoadBaseStringOrNull(‚Ä¶) Get the default English text for a translation path, or null if it's not found.
Item.LearnRecipe() Learn the recipe for this item (regardless of whether the recipe is in Data/CookingRecipes or Data/CraftingRecipes).
NPC.CanSocializePerData(‚Ä¶) Get whether social features (like birthdays, gift giving, friendship, and an entry in the social tab) should be enabled for an NPC, based on their entry in Data/Characters. This is equivalent to npc.CanSocialize, but doesn't need an instance of the NPC.
Object.GetPreservedItemId() Get the item ID which was preserved as part of this item (e.g. the tulip ID for tulip honey), if applicable. This is equivalent to item.preservedParentSheetIndex, except in special cases like wild honey where preservedParentSheetIndex is set to a non-item value like -1.
Object.IsTextSign() Get whether the object can have editable text which is shown on hover like a text sign.
Object.GetObjectDisplayName(‚Ä¶) Get the display name which would be set for an object, without needing to create an object instance.
Raccoon.GetBundle()
Raccoon.GetBundle(timesFed) Get the raccoon bundle that will be shown currently, or after completing a given number of bundles.
Utility.fuzzySearchAll(‚Ä¶) Find all matches for a search term based on fuzzy compare rules.
For example:
IEnumerable<string> coopNames = Utility.FuzzySearchAll("coop", Game1.buildingData.Keys); // [ "Coop", "Big Coop", "Deluxe Coop" ]
WorldDate.GetDaysPlayed(‚Ä¶) Get the total days for a given date from the start of the game, to allow for efficient date comparisons.
For example:
int minDaysPlayed = WorldDate.GetDaysPlayed(year, season, dayOfMonth);
int actualDaysPlayed = Game1.Date.TotalDays;
if (actualDaysPlayed >= minDaysPlayed)
   ...;
And improves many existing fields & methods. For example:
member changes
ArgUtility.UnsplitQuoteAware
You can now set an optional start index and count, which avoids needing to copy the array before unsplitting the desired arguments.
It now returns an empty string instead of null when given a null array, to match the other ArgUtility/samp> methods.
GameLocation.getTileIndexAt(‚Ä¶)
Layer.GetTileIndexAt(‚Ä¶)
Map.GetTileIndexAt(‚Ä¶) Added a string tilesheetId = null argument, which checks for a tile index from a specific tilesheet if set.
LocalizedContentManager.LoadStringReturnNullIfNotFound(‚Ä¶) Added optional substitution arguments and an optional localeFallback argument.
MineShaft.IsGeneratedLevel(‚Ä¶)
VolcanoDungeon.IsGeneratedLevel(‚Ä¶) Added overloads without the out parameters to simplify common logic. For example:
if (MineShaft.IsGeneratedLevel(location))
   ...;
ResourceClump.IsGreenRainBush() Get whether this is a special Green Rain bush (which looks like a giant weed).
Utility.consolidateStacks(‚Ä¶) When a stack is removed, it now sets that index to null instead of removing it, so it's safe to use with player inventories.
If your code doesn't expect null entries in the list, you can remove them after consolidating:
Utility.consolidateStacks(itemList);
itemList.RemoveWhere(slot => slot is null);
And removes various methods, including...
member replacement
GameLocation.refurbishMapPortion(‚Ä¶) use location.ApplyMapOverride instead.
GameLocation.setMapTileIndex(‚Ä¶) Use location.setMapTile instead.
New constants
1.6.9 adds new constants:
constant usage
AchievementIds.* The IDs for achievements in Data/Achievements. For example:
// before 1.6.9
if (player.achievements.Contains(34))
   ...;

// after 1.6.9
if (player.achievements.Contains(AchievementIds.FullShipment))
   ...;
GameLocation.DefaultTileSheetId
MineShaft.MainTileSheetId
MovieTheater.MainTileSheetId
Submarine.MainTileSheetId
VolcanoDungeon.MainTileSheetId The main tilesheet IDs for each location: default (untitled tile sheet), mines (mine), movie theater (movieTheater_tileSheet), submarine (submarine tiles), and volcano dungeon (dungeon) respectively.
Item.ErrorItemName The "Error Item" name shown for invalid items.
SpecialCurrencyDisplay.currency_qiGems
SpecialCurrencyDisplay.currency_walnuts The currency types supported by the special currency display (shown in the top-left corner when you find a Qi gem or golden walnut).
ForEachItem changes
The ForEachItem methods changed a bit in 1.6.9. (These methods iterate through every item in the world, and optionally remove/replace instances.)
Most mods aren't affected. This affects mods which use the advanced ForEachItem form (like Utility.ForEachItem((item, remove, replaceWith) => ...)), or which implement custom item types which can contain other items. Mods which use the simple form (like Utility.ForEachItem(item => ...)) don't need any changes.
The main changes are:
The advanced forms now use a context object, which also provides the 'path' to the item. For example, an item inside a chest would have a path consisting of the location and chest:
Utility.ForEachItemContext(delegate(in ForEachItemContext context)
{
    // remove pufferfish inside chests
     if (context.Item.QualifiedItemId == "(O)128" && context.GetPath().Last() is Chest)
        context.RemoveItem();
    return true;
});
The context must be passed by reference using the in keyword. This doesn't work with lambdas, so you'll need to adjust the format:
// ‚úò lambda can't use 'in'
Utility.ForEachItemContext(in context =>
{
    context.RemoveItem();
    return true;
});

// ‚úì use method or local function
bool HandleItem(in ForEachItemContext context)
{
    context.RemoveItem();
    return true;
}
Utility.ForEachItemContext(HandleItem);

// ‚úì use delegate
Utility.ForEachItemContext(delegate(in ForEachItemContext context)
{
    context.RemoveItem();
    return true;
});
For custom items which override Item.ForEachItem, the method signature has changed from this:
/// <summary>Perform an action for each item contained within this item (e.g. items stored within a chest, item placed on a table, etc). This doesn't include the item itself.</summary>
/// <param name="handler">The action to perform for each item.</param>
/// <returns>Returns whether to continue iterating.</returns>
bool ForEachItem(ForEachItemDelegate handler);
To this:
/// <summary>Perform an action for each item contained within this item (e.g. items stored within a chest, item placed on a table, etc). This doesn't include the item itself.</summary>
/// <param name="handler">The action to perform for each item.</param>
/// <param name="getPath">The contextual path leading to this item (including the item), or <c>null</c> to treat this as the root.</param>
/// <returns>Returns whether to continue iterating.</returns>
bool ForEachItem(ForEachItemDelegate handler, GetForEachItemPathDelegate getPath);
You should pass the getPath value to ForEachItemHelper methods.
OutputMethod changes in Data/Machines
These docs should be merged into Modding:Machines. When copying content, make sure you attribute the original authors.
If you have custom C# methods which are used in the OutputMethod field in Data/Machines, the method signature has changed in 1.6.9. You'll need to add the new Farmer player argument to your methods:
/// <summary>The method signature for a custom <see cref="MachineItemOutput.OutputMethod"/> method.</summary>
/// <param name="machine">The machine instance for which to produce output.</param>
/// <param name="inputItem">The item being dropped into the machine, if applicable.</param>
/// <param name="probe">Whether the machine is only checking the output that would be produced. If so, the input/machine shouldn't be changed and no animations/sounds should play.</param>
/// <param name="outputData">The item output data from <c>Data/Machines</c> for which output is being created, if applicable.</param>
/// <param name="player">The player interacting with the machine, if any.</param>
/// <param name="overrideMinutesUntilReady">The in-game minutes until the item will be ready to collect, if set. This overrides the equivalent fields in the machine data if set.</param>
/// <returns>Returns the item to produce, or <c>null</c> if none should be produced.</returns>
public delegate Item MachineOutputDelegate(Object machine, Item inputItem, bool probe, MachineItemOutput outputData, Farmer player, out int? overrideMinutesUntilReady);
Other changes
For items:
Object.signText can now use game tokens. The new SignText property contains the parsed display text.
For trinkets:
trinket.OnDamageMonster methods now receive isBomb and isCriticalHit arguments.
For C# mods, added a new namespace and code docs, made more code public, renamed fields for clarity, etc.
Fixed Trinket.getOne() not copying trinker fields.
Fixed TrinketEffect.GenerateRandomStats() not updating the description correctly if valled again after its constructor.
UI changes:
Added [screen reader fields](https://stardewvalleywiki.com/Modding:Migrate_to_Stardew_Valley_1.6.9#Screen_reader_changes).
Added an ItemGrabMenu constructor to copy an existing menu (e.g. when reopening it).
Rewrote Game1.specialCurrencyDisplay. It can now handle and display multiple currencies at once, has constants and full code docs, and you no longer need to manually manage persistent display (e.g. while a menu is open).
The default controller navigation in menus already auto-detected ClickableComponent values in public List<T> and some Dictionary<TKey, TValue> fields. That now works with any subclass of ClickableComponent and any combination of dictionary key/value types too.
Fixed organize button in inventory UIs resetting various menu options.
Added a new Game1.GetPlayer method, which deprecates the old getFarmer and getFarmerMaybeOffline methods.
Added support for tokenized strings in Game1.multiplayer.broadcastGlobalMessage arguments.
In Data/Machines, OutputMethod C# methods now get the player interacting with the machine too (if any). Unfortunately this is a breaking change for C# mods which have custom OutputMethod methods.
Item data is now loaded earlier, so mods can use it when loading other assets (e.g. to check item context tags when generating location fish).
The Object.displayNameFormat field is now synced in multiplayer, to let mods create customized non-temporary items.
Changed signature of IClickableMenu.draw(SpriteBatch b, int red = -1, int green = -1, int blue = -1)</cide> so the arguments are no longer optional, which fixes the conflict with draw(SpriteBatch b).
You can now warp to a specific mine layout using the new forceLayout argument to Game1.enterMine or MineShaft.GetLevelName.
ItemStockInformation is now a class instead of a struct, which avoids counterintuitive behavior when editing shop stock.
LanguageSelectionMenu was rewritten to de-hardcode language support a bit.
ShopMenu's onPurchase callback now receives the stock info, and uses a documented delegate.
Quests and special orders can now optionally count wild monsters killed on the farm (default false). This is indicated in Data/Quests by a fourth argument in slay quests' objectives field, and in Data/SpecialOrders via an IgnoreFarmMonsters entry in slay objectives' Data field.
Fixed desert festival makeover not calling hat/clothing onEquip/onUnEquip methods.
Fixed location.playTerrainSound changing the sound based on the player's current location instead of the location it's called for.
Fixed Utility.tryToPlaceItem taking an Item argument instead of Object, despite throwing an exception when given a non-Object value.
Fixed farmers misrendering when drawn with a non-default scale.
Fixed some cases where you could call TriggerActionManager before it was fully initialized.
Fixed errors when calling some Bush methods on a destroyed or non-placed bush.
Fixed warning text when calling TriggerActionManager.RegisterAction with a duplicate name incorrectly saying the newer value will be used.
Added more code docs.
Made more code public for mods.
Removed the last net field implicit conversion operators (for NetBool, NetInt, and NetString).
Removed unused types, fields/properties, and methods.
Tweaked powers tab code so mods can get the power ID for a slot.
Changes for SMAPI and external tools
Content hashes
The game now has a Content/ContentHashes.json file, which contains the MD5 hash for every vanilla content asset. This lets SMAPI, mod managers, and other tools auto-detect content files that are outdated, broken, missing, or replaced by XNB mods.
Name translation changes for wiki maintainers
Some in-game item or monster names were retranslated in some languages for clarity or correctness.
This list is mostly provided to help wiki maintainers update pages, so it doesn't include names which only changed capitalization, changed ' (straight apostrophe) to ‚Äô (curly) in French, or aren't visible to vanilla players (like mine rocks).
Objects
English
item old name new name
Jelly Cranberries Jelly Cranberry Jelly
Juice Cranberries Juice Cranberry Juice
Wine Cranberries Wine Cranberry Wine
French
item old name new name
Aerinite Aerinite A√©rinite
Blobfish Blobfish Poisson-blob
Bone Mill Bone Moulin Moulin √† os
Cave Jelly M√©duse des cavernes Gel√©e des cavernes
Cookie Cookie Biscuit
Dinosaur Mayonnaise Mayonnaise dinosaure Mayonnaise de dinosaure
Dried Fruit Un morceau s√©ch√© de abricot Un morceau s√©ch√© d‚Äôabricot
Un morceau s√©ch√© de ananas Un morceau s√©ch√© d‚Äôananas
Un morceau s√©ch√© de orange Un morceau s√©ch√© d‚Äôorange
Fairy Rose Rose F√©erie Rose de f√©e
Fairy Seeds Graines de rose F√©erie Graines de rose de f√©e
Fiddlehead Fern Foug√®res de Fern Crosse de foug√®re
Fiddlehead Risotto Risotto aux foug√®res Risotto aux crosses de foug√®re
Granite Granite Granit
Haley's Lost Bracelet Haley's Lost Bracelet Bracelet perdu de Haley
Item Pedestal Item Pedestal Pi√©destal
Jelly Gel√©e de abricot Gel√©e d‚Äôabricot
Gel√©e de ananas Gel√©e d‚Äôananas
Gel√©e de orange Gel√©e d‚Äôorange
Juice Jus de Ail Jus d‚Äôail
Jus de Amarante Jus d‚Äôamarante
Jus de Artichaut Jus d‚Äôartichaut
Jus de Aubergine Jus d‚Äôaubergine
Jus de Igname Jus d‚Äôigname
Maple Bar G√¢teau √† l'√©rable G√¢teau d‚Äô√©rable
Midnight Squid Calmar de minuit Calamar de minuit
Qi Bean Haricot Qi Haricot de Qi
Qi Fruit Fruit Qi Fruit de Qi
Qi Gem Gemme Qi Gemmes de Qi
River Jelly M√©duse d‚Äôeau douce Gel√©e de rivi√®re
Sea Jelly M√©duse de l‚Äôoc√©an. Gel√©e de mer
Squid Calmar Calamar
Sweet Gem Berry Baie gemme sucr√©e Baie de gemme sucr√©e
Targeted Bait App√¢t de Achigan √† grande bouche App√¢t d‚Äôachigan √† grande bouche
App√¢t de Achigan √† petite bouche App√¢t d‚Äôachigan √† petite bouche
App√¢t de Albacore App√¢t d‚Äôalbacore
App√¢t de Alose App√¢t d‚Äôalose
App√¢t de Anchois App√¢t d‚Äôanchois
App√¢t de Anguille App√¢t d‚Äôanguille
App√¢t de Anguille de lave App√¢t d‚Äôanguille de lave
App√¢t de √âcrevisse App√¢t d‚Äô√©crevisse
App√¢t de Escargot App√¢t d‚Äôescargot
App√¢t de Esturgeon App√¢t d‚Äôesturgeon
Wine Vin de abricot Vin d‚Äôabricot
Vin de ananas Vin d‚Äôananas
Vin de orange Vin d‚Äôorange
German
item old name new name
Artifact Trove Artefakt Fund Artefaktfund
Calico Egg Calico Ei Calico-Ei
Combat Quarterly Kampf-Vierteljahresschrift Kampf-Quartalsheft
Curiosity Lure Neugierde K√∂der Neugierk√∂der
Deluxe Worm Bin Luxus-Wurmbeh√§lter Luxus-Wurmeimer
Dressed Spinner Verkleideter Dreher Verkleideter Spinner
Farm Computer Hof Rechner Hof-Rechner
Fireworks Fireworks (Gr√ºn) Feuerwerk (Gr√ºn)
Goby Goby Grundeln
Hot Java Ring Hei√üer Java Ring Hei√üer Java-Ring
Item Pedestal Item Pedestal Gegenstand Podest
Magma Cap Magma Hut Magmahut
Mango Sticky Rice Mango Klebreis Mango-Klebreis
Monster Compendium Monster Kompendium Monster-Kompendium
Movie Ticket Kino Ticket Kinoticket
Qi Fruit Qi Frucht Qi-Frucht
Qi Gem Qi Edelstein Qi-Edelstein
Raccoon Journal Waschb√§r Tagebuch Waschb√§r-Tagebuch
Sonar Bobber Sonar K√∂der Sonark√∂der
Spinner Dreher Spinner
Stardew Valley Almanac Stardew Valley Almanach Sternentautaler Almanach
Stardew Valley Rose Stardew Valley Rose Sternentautaler Rose
Stardrop Tea Sternentropfen-Tee Sternenfall-Tee
Tea Leaves Tee Bl√§tter Teebl√§tter
Tent Kit Zelt Bausatz Zelt-Bausatz
Treasure Totem Schatz Totem Schatz-Totem
Warp Totem: Desert Teleport Totem: W√ºste Teleport-Totem: W√ºste
Hungarian
item old name new name
Baryte
(in 1.6.15) Baryt Barit
Carp Surprise
(in 1.6.15) Ponty meglepet√©s Pontymeglepet√©s
Cave Jelly Barlangi med√∫za Barlangi zsel√©
Charcoal Kiln
(in 1.6.15) Fasz√©n kemence Faszenes kemence
Chewing Stick
(in 1.6.15) R√°g√≥ bot R√°g√≥bot
Chicken Statue
(in 1.6.15) Csirke szobor Csirkeszobor
Dehydrator
(in 1.6.15) Sz√°r√≠t√≥ Aszal√≥
Deluxe Worm Bin
(in 1.6.15) Luxus giliszt√°s l√°da Luxus giliszt√°sl√°da
Dinosaur Egg
(in 1.6.15) Dinoszaurusz toj√°s Dinoszaurusztoj√°s
Dried Fruit (base item)
(in 1.6.15) Sz√°r√≠tott Aszalt
Dried Fruit (collections tab)
(in 1.6.15) Sz√°r√≠tott gy√ºm√∂lcs Aszalt gy√ºm√∂lcs
Dried Fruit (flavored)
(in 1.6.15) Sz√°r√≠tott <item name> Aszalt <item name>
Eggplant Parmesan
(in 1.6.15) Padlizs√°n parmez√°n Padlizs√°nos parmez√°n
Farm Computer
(in 1.6.15) Farm sz√°m√≠t√≥g√©p Farm-sz√°m√≠t√≥g√©p
Fiddlehead Fern
(in 1.6.15) Heged≈±fej p√°fr√°ny Heged≈±fejp√°fr√°ny
Fiddlehead Risotto
(in 1.6.15) Heged≈±fej rizott√≥ Heged≈±fejes rizott√≥
Fire Opal
(in 1.6.15) T≈±z op√°l T≈±zop√°l
Fire Quartz
(in 1.6.15) T≈±z kvarc T≈±zkvarc
Fish Taco
(in 1.6.15) Hal taco Haltaco
Glass Shards
(in 1.6.15) √úveg t√∂red√©kek √úvegt√∂red√©kek
Golden Relic
(in 1.6.15) Arany ereklye Aranyereklye
Iridium Sprinkler
(in 1.6.15) Ir√≠dium √∂nt√∂z≈ë Ir√≠dium√∂nt√∂z≈ë
Preserves Jar
(in 1.6.15) Tart√≥s√≠t√≥ t√©gely Tart√≥s√≠t√≥t√©gely
Lobster Bisque
(in 1.6.15) Hom√°r kr√©mleves Hom√°rkr√©mleves
Lucky Ring
(in 1.6.15) Szerencs√©s gy≈±r≈± Szerencsegy≈±r≈±
Maki Roll
(in 1.6.15) Maki tekercs Maki-tekercs
Mega Bomb
(in 1.6.15) Mega bomba Megabomba
Prize Ticket
(in 1.6.15) Jutalom jegy Jutalomjegy
Rainbow Shell
(in 1.6.15) Sziv√°rv√°ny kagyl√≥ Sziv√°rv√°nyos kagyl√≥
Rhubarb Pie
(in 1.6.15) Rebarbara pite Rebarbar√°s pite
Rice Pudding
(in 1.6.15) Rizspuding Tejberizs
River Jelly Folyami med√∫za Folyami zsel√©
Salmon Dinner
(in 1.6.15) Lazac vacsora Lazacvacsora
Sashimi
(in 1.6.15) Sashimi Szasimi
Seafoam Pudding
(in 1.6.15) Tengeri hab puding Tengerihab-puding
Sea Jelly Tengeri med√∫za Tengeri zsel√©
Shrimp Cocktail
(in 1.6.15) Garn√©la kokt√©l Garn√©lakokt√©l
Skeletal Hand
(in 1.6.15) Csontv√°z k√©z Csontv√°zk√©z
Sonar Bobber
(in 1.6.15) Szon√°r √∫sz√≥ Szon√°r√∫sz√≥
Squid Ink
(in 1.6.15) Tintahal tinta Tintahaltinta
Squid Ink Ravioli
(in 1.6.15) Tintahal tint√°s ravioli Tintahaltint√°s ravioli
Star Shards
(in 1.6.15) Csillagt√∂red√©kek Csillagt√∂red√©k
Stepping Stone Path
(in 1.6.15) L√©pcs≈ës k≈ë√∫t L√©p≈ëk√∂ves √∫t
Straw Floor
(in 1.6.15) Szalma padl√≥ Szalmapadl√≥
Sweet Gem Berry
(in 1.6.15) √âdes dr√°gak≈ë bogy√≥ √âdes dr√°gak≈ëbogy√≥
Trap Bobber
(in 1.6.15) Csapda √∫sz√≥ Csapda√∫sz√≥
Tree Fertilizer
(in 1.6.15) Fa tr√°gya Fatr√°gya
Truffle Oil
(in 1.6.15) Szarvasgomba olaj Szarvasgombaolaj
Warrior Ring
(in 1.6.15) Harcos gy≈±r≈± Harci gy≈±r≈±
Worm Bin
(in 1.6.15) Giliszt√°s l√°da Giliszt√°sl√°da
Italian
item old name new name
Cave Jelly Medusa di grotta Gelatina di grotta
Ginger Ale Ginger ale Liquore allo zenzero
Haley's Lost Bracelet Haley's Lost Bracelet Braccialetto perduto di Haley
Item Pedestal Item Pedestal Piedistallo per oggetto
Rice Shoot Spara di riso Germoglio di riso
River Jelly Medusa fluviale Gelatina fluviale
Sea Jelly Medusa marina Gelatina marina
Japanese
item old name new name
Bone Mill „ÇØ„É™„Çπ„Çø„É´„ÉÅ„Çß„Ç¢ È™®Á≤âÁ†ïÊ©ü
Cave Jelly Ê¥ûÁ™ü„ÇØ„É©„Ç≤ Ê¥ûÁ™ü„Çº„É™„Éº
Haley's Lost Bracelet Haley's Lost Bracelet „Éò„Ç§„É™„Éº„Åå„Å™„Åè„Åó„Åü„Éñ„É¨„Çπ„É¨„ÉÉ„Éà
Heavy Tapper Heavy Tapper Â§ßÂûãÊ®πÊ∂≤Êé°ÂèñÂô®
Item Pedestal Item Pedestal „Ç¢„Ç§„ÉÜ„É†Áî®„ÅÆÂè∞Â∫ß
River Jelly Â∑ù„ÇØ„É©„Ç≤ Â∑ù„Çº„É™„Éº
Roe ÊòéÂ§™Â≠ê È≠öÂçµ
Sea Jelly Êµ∑„ÇØ„É©„Ç≤ Êµ∑„Çº„É™„Éº
Stone Cairn Áü≥„ÅÆ„Ç´„Ç§„É† Áü≥„ÅÆ„Ç±„Ç¢„É≥
Korean
item old name new name
Haley's Lost Bracelet Haley's Lost Bracelet Ìó§ÏùºÎ¶¨Ïùò ÏûÉÏñ¥Î≤ÑÎ¶∞ ÌåîÏ∞å
Sunfish Í∞úÎ≥µÏπò ÏÑ†ÌîºÏâ¨
Russian
item old name new name
Big Green Cane –ë–æ–ª—å—à–æ–π –∑–µ–ª–µ–Ω—ã–π —Ç—Ä–æ—Å—Ç–Ω–∏–∫ –ë–æ–ª—å—à–∞—è –∑–µ–ª–µ–Ω–∞—è —Ç—Ä–æ—Å—Ç—å
Big Red Cane –ë–æ–ª—å—à–æ–π –∫—Ä–∞—Å–Ω—ã–π —Ç—Ä–æ—Å—Ç–Ω–∏–∫ –ë–æ–ª—å—à–∞—è –∫—Ä–∞—Å–Ω–∞—è —Ç—Ä–æ—Å—Ç—å
Blobfish
(in 1.6.15) –†—ã–±–∞-–ø—É–∑—ã—Ä—å –†—ã–±–∞-–∫–∞–ø–ª—è
Blue Slime Egg
(in 1.6.15) –°–∏–Ω–µ–µ —è–π—Ü–æ —Å–ª–∞–π–º–∞ –Ø–π—Ü–æ —Å–∏–Ω–µ–≥–æ —Å–ª–∞–π–º–∞
Bok Choy Seeds –°–µ–º–µ–Ω–∞ –±–æ–∫-—á–æ–π –°–µ–º–µ–Ω–∞ –±–æ–∫-—á–æ—è
Chicken Decal –ù–∞–∫–ª–µ–π–∫–∞ ¬´–ö—É—Ä–∏—Ü–∞¬ª –ù–∞–∫–ª–µ–π–∫–∞ ¬´–ö—É—Ä–∏—Ü—ã¬ª
Crimsonfish –ö—Ä–∏–º–∑–æ–Ω—Ñ–∏—à –ë–∞–≥—Ä—è–Ω–Ω–∏–∫
Crispy Bass
(in 1.6.15) –û–∫—É–Ω—å —Å —Ö—Ä—É—Å—Ç. –∫–æ—Ä–æ—á–∫–æ–π –û–∫—É–Ω—å —Å —Ö—Ä—É—Å—Ç—è—â–µ–π –∫–æ—Ä–æ—á–∫–æ–π
Dried Fruit <item name> (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω. <item name>
–†–µ–≤–µ–Ω—å (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–π —Ä–µ–≤–µ–Ω—å
–î—ã–Ω—è (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∫—É—Å–æ—á–∫–∏ –¥—ã–Ω–∏
–°–º–æ—Ä—á–æ–∫ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ —Å–º–æ—Ä—á–∫–∏
–ß–µ—Ä–Ω–∏–∫–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è —á–µ—Ä–Ω–∏–∫–∞
–ñ–≥—É—á–∏–π –ø–µ—Ä–µ—Ü (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∂–≥—É—á–∏–µ –ø–µ—Ä—Ü—ã
–ö–∞—Ä–∞–º–±–æ–ª–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∫—É—Å–æ—á–∫–∏ –∫–∞—Ä–∞–º–±–æ–ª—ã
–õ–∏—Å–∏—á–∫–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –ª–∏—Å–∏—á–∫–∏
–ö–ª—é–∫–≤–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è –∫–ª—é–∫–≤–∞
–ú–æ—Ä–æ—à–∫–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è –º–æ—Ä–æ—à–∫–∞
–û—Å—Ç—Ä–∞—è —è–≥–æ–¥–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –æ—Å—Ç—Ä—ã–µ —è–≥–æ–¥—ã
–ö–ª—É–±–Ω–∏–∫–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è –∫–ª—É–±–Ω–∏–∫–∞
–®–∞–º–ø–∏–Ω—å–æ–Ω (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ —à–∞–º–ø–∏–Ω—å–æ–Ω—ã
–î–∏–∫–∞—è —Å–ª–∏–≤–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –¥–∏–∫–∏–µ —Å–ª–∏–≤—ã
–ï–∂–µ–≤–∏–∫–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è –µ–∂–µ–≤–∏–∫–∞
–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —Ñ—Ä—É–∫—Ç (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∫—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã
–§–∏–æ–ª–µ—Ç–æ–≤—ã–π –≥—Ä–∏–± (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∏–±—ã
–î—Ä–µ–≤–Ω–∏–π –ø–ª–æ–¥ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –¥—Ä–µ–≤–Ω–∏–µ –ø–ª–æ–¥—ã
–Ø–±–ª–æ–∫–æ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ —è–±–ª–æ–∫–∏
–ê–±—Ä–∏–∫–æ—Å (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∞–±—Ä–∏–∫–æ—Å—ã
–ê–ø–µ–ª—å—Å–∏–Ω (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∞–ø–µ–ª—å—Å–∏–Ω—ã
–ü–µ—Ä—Å–∏–∫ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –ø–µ—Ä—Å–∏–∫–∏
–ì—Ä–∞–Ω–∞—Ç (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –≥—Ä–∞–Ω–∞—Ç—ã
–í–∏—à–Ω—è (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω–∞—è –≤–∏—à–Ω—è
–ê–Ω–∞–Ω–∞—Å (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∞–Ω–∞–Ω–∞—Å—ã
–ú–∞–Ω–≥–æ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –º–∞–Ω–≥–æ
–ú–∞–≥–º–æ–≤—ã–π –≥—Ä–∏–± (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –º–∞–≥–º–æ–≤—ã–µ –≥—Ä–∏–±—ã
–§—Ä—É–∫—Ç –ö–∏ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã –ö–∏
–ö–æ–∫–æ—Å (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∫–æ–∫–æ—Å—ã
–ü–ª–æ–¥ –∫–∞–∫—Ç—É—Å–∞ (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –ø–ª–æ–¥—ã –∫–∞–∫—Ç—É—Å–∞
–ë–∞–Ω–∞–Ω (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –±–∞–Ω–∞–Ω—ã
–°–Ω–µ–≥–æ–¥—ã–Ω—è (–∑–∞—Å—É—à–µ–Ω–æ) –°—É—à–µ–Ω—ã–µ –∫—É—Å–æ—á–∫–∏ —Å–Ω–µ–≥–æ–¥—ã–Ω–∏
Far Away Stone –ö–∞–º–µ–Ω—å –∏–∑–¥–∞–ª–µ–∫–∞ –ö–∞–º–µ–Ω—å –∏–∑ –¥–∞–ª–µ–∫–∏—Ö –∑–µ–º–µ–ª—å
Fish Taco –†—ã–±–Ω—ã–π —Ç–∞–∫–æ –†—ã–±–Ω–æ–µ —Ç–∞–∫–æ
Flounder
(in 1.6.15) –ú–µ–ª–∫–∞—è –∫–∞–º–±–∞–ª–∞ –ö–∞–º–±–∞–ª–∞
Glacierfish Jr. –õ–µ–¥–æ—Ä—ã–± –ú–ª. –õ–µ–¥–æ—Ä—ã–±-–º–ª–∞–¥—à–∏–π
Green Canes –ó–µ–ª–µ–Ω—ã–π —Ç—Ä–æ—Å—Ç–Ω–∏–∫ –ó–µ–ª–µ–Ω—ã–µ —Ç—Ä–æ—Å—Ç–æ—á–∫–∏
Halibut
(in 1.6.15) –ö–∞–º–±–∞–ª–∞ –ü–∞–ª—Ç—É—Å
Honey –ú–µ–¥ (–ú–∞–∫) –ú–∞–∫–æ–≤—ã–π –º–µ–¥
–ú–µ–¥ (–ü–æ–¥—Å–æ–ª–Ω—É—Ö) –ü–æ–¥—Å–æ–ª–Ω—É—Ö–æ–≤—ã–π –º–µ–¥
–ú–µ–¥ (–¢—é–ª—å–ø–∞–Ω) –¢—é–ª—å–ø–∞–Ω–æ–≤—ã–π –º–µ–¥
–ú–µ–¥ (–õ–µ—Ç–Ω–∏–π –±–ª–µ—Å—Ç–Ω–∏–∫) –ú–µ–¥ –∏–∑ –ª–µ—Ç–Ω–µ–≥–æ –±–ª–µ—Å—Ç–Ω–∏–∫–∞
–ú–µ–¥ (–°–∫–∞–∑–æ—á–Ω–∞—è —Ä–æ–∑–∞) –ú–µ–¥ –∏–∑ —Å–∫–∞–∑–æ—á–Ω–æ–π —Ä–æ–∑—ã
–ú–µ–¥ (–°–∏–Ω–∏–π —è—Ä–∫–æ—Ü–≤–µ—Ç) –Ø—Ä–∫–æ—Ü–≤–µ—Ç–æ–≤—ã–π –º–µ–¥
Green Slime Egg
(in 1.6.15) –ó–µ–ª–µ–Ω–æ–µ —è–π—Ü–æ —Å–ª–∞–π–º–∞ –Ø–π—Ü–æ –∑–µ–ª–µ–Ω–æ–≥–æ —Å–ª–∞–π–º–∞
Immunity Band
(in 1.6.15) –ö–æ–ª—å—Ü–æ —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –ü–µ—Ä—Å—Ç–µ–Ω—å –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è
Iridium Band
(in 1.6.15) –ò—Ä–∏–¥–∏–µ–≤—ã–π –æ–±–æ–¥ –ò—Ä–∏–¥–∏–µ–≤—ã–π –ø–µ—Ä—Å—Ç–µ–Ω—å
Jelly –î–∂–µ–º (–†–µ–≤–µ–Ω—å) –î–∂–µ–º –∏–∑ —Ä–µ–≤–µ–Ω—è
–î–∂–µ–º (–î—ã–Ω—è) –î—ã–Ω–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ß–µ—Ä–Ω–∏–∫–∞) –ß–µ—Ä–Ω–∏—á–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ñ–≥—É—á–∏–π –ø–µ—Ä–µ—Ü) –î–∂–µ–º –∏–∑ –∂–≥—É—á–µ–≥–æ –ø–µ—Ä—Ü–∞
–î–∂–µ–º (–ö–∞—Ä–∞–º–±–æ–ª–∞) –î–∂–µ–º –∏–∑ –∫–∞—Ä–∞–º–±–æ–ª—ã
–î–∂–µ–º (–ö–ª—é–∫–≤–∞) –ö–ª—é–∫–≤–µ–Ω–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ú–æ—Ä–æ—à–∫–∞) –î–∂–µ–º –∏–∑ –º–æ—Ä–æ—à–∫–∏
–î–∂–µ–º (–û—Å—Ç—Ä–∞—è —è–≥–æ–¥–∞) –î–∂–µ–º –∏–∑ –æ—Å—Ç—Ä–æ–π —è–≥–æ–¥—ã
–î–∂–µ–º (–í–∏–Ω–æ–≥—Ä–∞–¥) –í–∏–Ω–æ–≥—Ä–∞–¥–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ö–ª—É–±–Ω–∏–∫–∞) –ö–ª—É–±–Ω–∏—á–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–î–∏–∫–∞—è —Å–ª–∏–≤–∞) –î–∂–µ–º –∏–∑ –¥–∏–∫–æ–π —Å–ª–∏–≤—ã
–î–∂–µ–º (–ï–∂–µ–≤–∏–∫–∞) –ï–∂–µ–≤–∏—á–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —Ñ—Ä—É–∫—Ç) –î–∂–µ–º –∏–∑ –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä—É–∫—Ç–∞
–î–∂–µ–º (–î—Ä–µ–≤–Ω–∏–π –ø–ª–æ–¥) –î–∂–µ–º –∏–∑ –¥—Ä–µ–≤–Ω–µ–≥–æ –ø–ª–æ–¥–∞
–î–∂–µ–º (–Ø–±–ª–æ–∫–æ) –Ø–±–ª–æ—á–Ω—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ê–±—Ä–∏–∫–æ—Å) –ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ê–ø–µ–ª—å—Å–∏–Ω) –ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ü–µ—Ä—Å–∏–∫) –ü–µ—Ä—Å–∏–∫–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ì—Ä–∞–Ω–∞—Ç) –ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–í–∏—à–Ω—è) –í–∏—à–Ω–µ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ê–Ω–∞–Ω–∞—Å) –ê–Ω–∞–Ω–∞—Å–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ú–∞–Ω–≥–æ) –ú–∞–Ω–≥–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–§—Ä—É–∫—Ç –ö–∏) –î–∂–µ–º –∏–∑ —Ñ—Ä—É–∫—Ç–∞ –ö–∏
–î–∂–µ–º (–ö–æ–∫–æ—Å) –ö–æ–∫–æ—Å–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ü–ª–æ–¥ –∫–∞–∫—Ç—É—Å–∞) –ö–∞–∫—Ç—É—Å–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–ë–∞–Ω–∞–Ω) –ë–∞–Ω–∞–Ω–æ–≤—ã–π –¥–∂–µ–º
–î–∂–µ–º (–°–Ω–µ–≥–æ–¥—ã–Ω—è) –î–∂–µ–º –∏–∑ —Å–Ω–µ–≥–æ–¥—ã–Ω–∏
Juice –°–æ–∫ (–ê–º–∞—Ä–∞–Ω—Ç) –ê–º–∞—Ä–∞–Ω—Ç–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–ê—Ä—Ç–∏—à–æ–∫) –ê—Ä—Ç–∏—à–æ–∫–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–°–≤–µ–∫–ª–∞) –°–≤–µ–∫–æ–ª—å–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–ë–æ–∫-—á–æ–π) –°–æ–∫ –±–æ–∫-—á–æ—è
–°–æ–∫ (–ë—Ä–æ–∫–∫–æ–ª–∏) –°–æ–∫ –±—Ä–æ–∫–∫–æ–ª–∏
–°–æ–∫ (–ú–æ—Ä–∫–æ–≤—å) –ú–æ—Ä–∫–æ–≤–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–¶–≤–µ—Ç–Ω–∞—è) –°–æ–∫ —Ü–≤–µ—Ç–Ω–æ–π –∫–∞–ø—É—Å—Ç—ã
–°–æ–∫ (–ö—É–∫—É—Ä—É–∑–∞) –ö—É–∫—É—Ä—É–∑–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–ë–∞–∫–ª–∞–∂–∞–Ω) –ë–∞–∫–ª–∞–∂–∞–Ω–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–°—ä–µ–¥–æ–±–Ω—ã–π –ø–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫) –ü–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–ß–µ—Å–Ω–æ–∫) –ß–µ—Å–Ω–æ—á–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–ó–µ–ª–µ–Ω–∞—è —Ñ–∞—Å–æ–ª—å) –°–æ–∫ –∑–µ–ª–µ–Ω–æ–π —Ñ–∞—Å–æ–ª–∏
–°–æ–∫ (–ö—É–¥—Ä—è–≤–∞—è –∫–∞–ø—É—Å—Ç–∞) –°–æ–∫ –∫—É–¥—Ä—è–≤–æ–π –∫–∞–ø—É—Å—Ç—ã
–°–æ–∫ (–ü–∞—Å—Ç–µ—Ä–Ω–∞–∫) –°–æ–∫ –ø–∞—Å—Ç–µ—Ä–Ω–∞–∫–∞
–°–æ–∫ (–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å) –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–¢—ã–∫–≤–∞) –¢—ã–∫–≤–µ–Ω–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–†–µ–¥–∏—Å) –°–æ–∫ —Ä–µ–¥–∏—Å–∞
–°–æ–∫ (–ö—Ä–∞—Å–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞) –°–æ–∫ –∫—Ä–∞—Å–Ω–æ–π –∫–∞–ø—É—Å—Ç—ã
–°–æ–∫ (–°–∫–≤–æ—à) –°–æ–∫ —Å–∫–≤–æ—à–∞
–°–æ–∫ (–ö–æ—Ä–µ–Ω—å —Ç–∞—Ä–æ) –°–æ–∫ –∫–æ—Ä–Ω—è —Ç–∞—Ä–æ
–°–æ–∫ (–ü–æ–º–∏–¥–æ—Ä) –¢–æ–º–∞—Ç–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–ù–µ–æ—á–∏—â–µ–Ω–Ω—ã–π —Ä–∏—Å) –†–∏—Å–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–ë–∞—Ç–∞—Ç) –°–æ–∫ –±–∞—Ç–∞—Ç–∞
–°–æ–∫ (–ü–µ—â–µ—Ä–Ω–∞—è –º–æ—Ä–∫–æ–≤–∫–∞) –°–æ–∫ –ø–µ—â–µ—Ä–Ω–æ–π –º–æ—Ä–∫–æ–≤–∫–∏
–°–æ–∫ (–û–¥—É–≤–∞–Ω—á–∏–∫) –°–æ–∫ –æ–¥—É–≤–∞–Ω—á–∏–∫–∞
–°–æ–∫ (–ò–º–±–∏—Ä—å) –ò–º–±–∏—Ä–Ω—ã–π —Å–æ–∫
–°–æ–∫ (–§—É–Ω–¥—É–∫) –û—Ä–µ—Ö–æ–≤—ã–π —Å–æ–∫
–°–æ–∫ (–õ—É–∫-–ø–æ—Ä–µ–π) –°–æ–∫ –ª—É–∫–∞-–ø–æ—Ä–µ—è
–°–æ–∫ (–õ—É–∫-–±–∞—Ç—É–Ω) –°–æ–∫ –ª—É–∫–∞-–±–∞—Ç—É–Ω–∞
–°–æ–∫ (–°–Ω–µ–∂–Ω—ã–π –±–∞—Ç–∞—Ç) –°–æ–∫ —Å–Ω–µ–∂–Ω–æ–≥–æ –±–∞—Ç–∞—Ç–∞
–°–æ–∫ (–î–∏–∫–∏–π —Ö—Ä–µ–Ω) –°–æ–∫ –¥–∏–∫–æ–≥–æ —Ö—Ä–µ–Ω–∞
–°–æ–∫ (–ó–∏–º–Ω–∏–π –∫–æ—Ä–µ–Ω—å) –°–æ–∫ –∑–∏–º–Ω–µ–≥–æ –∫–æ—Ä–Ω—è
Lionfish
(in 1.6.15) –ú–æ—Ä—Å–∫–æ–π —ë—Ä—à –ö—Ä—ã–ª–∞—Ç–∫–∞
Mini-Shipping Bin –ú–∏–Ω–∏-—è—â–∏–∫ –¥–ª—è –æ—Ç–≥—Ä—É–∑–æ–∫ –ú–∏–Ω–∏-—è—â–∏–∫ –¥–ª—è –æ—Ç–≥—Ä—É–∑–∫–∏
Mixed Cane –°–º–µ—à–∞–Ω–Ω—ã–π —Ç—Ä–æ—Å—Ç–Ω–∏–∫ –°–º–µ—à–∞–Ω–Ω—ã–µ —Ç—Ä–æ—Å—Ç–æ—á–∫–∏
Mystic Tree Seed –°–µ–º–µ—á–∫–æ —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –°–µ–º—è —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
Oil of Garlic –ú–∞—Å–ª–æ –ß–µ—Å–Ω–æ–∫–∞ –ß–µ—Å–Ω–æ—á–Ω–æ–µ –º–∞—Å–ª–æ
Pickles –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: <item name> –ú–∞—Ä–∏–Ω–æ–≤. <item name>
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –î–∏–∫–∏–π —Ö—Ä–µ–Ω –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –¥–∏–∫–∏–π —Ö—Ä–µ–Ω
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ó–µ–ª–µ–Ω–∞—è —Ñ–∞—Å–æ–ª—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è –∑–µ–ª–µ–Ω–∞—è —Ñ–∞—Å–æ–ª—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –¶–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞ –ö–≤–∞—à–µ–Ω–∞—è —Ü–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –õ—É–∫-–ø–æ—Ä–µ–π –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –ª—É–∫-–ø–æ—Ä–µ–π
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –û–¥—É–≤–∞–Ω—á–∏–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –æ–¥—É–≤–∞–Ω—á–∏–∫
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ß–µ—Å–Ω–æ–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —á–µ—Å–Ω–æ–∫
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ü–∞—Å—Ç–µ—Ä–Ω–∞–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Å—Ç–µ—Ä–Ω–∞–∫
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ö—É–¥—Ä—è–≤–∞—è –∫–∞–ø—É—Å—Ç–∞ –ö–≤–∞—à–µ–Ω–∞—è –∫—É–¥—Ä—è–≤–∞—è –∫–∞–ø—É—Å—Ç–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ü–æ–º–∏–¥–æ—Ä –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–º–∏–¥–æ—Ä—ã
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –°–º–æ—Ä—á–æ–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ —Å–º–æ—Ä—á–∫–∏
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –°—ä–µ–¥–æ–±–Ω—ã–π –ø–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞–ø–æ—Ä–æ—Ç–Ω–∏–∫
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ü—à–µ–Ω–∏—Ü–∞ –ö–≤–∞—à–µ–Ω–∞—è –ø—à–µ–Ω–∏—Ü–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –†–µ–¥–∏—Å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–¥–∏—Å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ö—Ä–∞—Å–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞ –ö–≤–∞—à–µ–Ω–∞—è –∫—Ä–∞—Å–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ö—É–∫—É—Ä—É–∑–∞ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è –∫—É–∫—É—Ä—É–∑–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ù–µ–æ—á–∏—â–µ–Ω–Ω—ã–π —Ä–∏—Å –ö–≤–∞—à–µ–Ω—ã–π —Ä–∏—Å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ë–∞–∫–ª–∞–∂–∞–Ω –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –±–∞–∫–ª–∞–∂–∞–Ω—ã
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ê—Ä—Ç–∏—à–æ–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏—à–æ–∫–∏
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –¢—ã–∫–≤–∞ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è —Ç—ã–∫–≤–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ë–æ–∫-—á–æ–π –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –±–æ–∫-—á–æ–π
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ë–∞—Ç–∞—Ç –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –±–∞—Ç–∞—Ç
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –õ–∏—Å–∏—á–∫–∞ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –ª–∏—Å–∏—á–∫–∏
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –°–≤–µ–∫–ª–∞ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è —Å–≤–µ–∫–ª–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ê–º–∞—Ä–∞–Ω—Ç –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∞–º–∞—Ä–∞–Ω—Ç
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –•–º–µ–ª—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —Ö–º–µ–ª—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –õ—É–∫-–±–∞—Ç—É–Ω –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –ª—É–∫-–±–∞—Ç—É–Ω
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –®–∞–º–ø–∏–Ω—å–æ–Ω –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ —à–∞–º–ø–∏–Ω—å–æ–Ω—ã
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –§—É–Ω–¥—É–∫ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —Ñ—É–Ω–¥—É–∫
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ó–∏–º–Ω–∏–π –∫–æ—Ä–µ–Ω—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∑–∏–º–Ω–∏–π –∫–æ—Ä–µ–Ω—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –°–Ω–µ–∂–Ω—ã–π –±–∞—Ç–∞—Ç –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —Å–Ω–µ–∂–Ω—ã–π –±–∞—Ç–∞—Ç
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –§–∏–æ–ª–µ—Ç–æ–≤—ã–π –≥—Ä–∏–± –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ –≥—Ä–∏–±—ã
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ü–µ—â–µ—Ä–Ω–∞—è –º–æ—Ä–∫–æ–≤–∫–∞ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è –ø–µ—â–µ—Ä–Ω–∞—è –º–æ—Ä–∫–æ–≤–∫–∞
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ß–∞–π–Ω—ã–µ –ª–∏—Å—Ç—å—è –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ —á–∞–π–Ω—ã–µ –ª–∏—Å—Ç—å—è
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ò–º–±–∏—Ä—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∏–º–±–∏—Ä—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ö–æ—Ä–µ–Ω—å —Ç–∞—Ä–æ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π –∫–æ—Ä–µ–Ω—å —Ç–∞—Ä–æ
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ú–∞–≥–º–æ–≤—ã–π –≥—Ä–∏–± –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –º–∞–≥–º–æ–≤—ã–µ –≥—Ä–∏–±—ã
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ë—Ä–æ–∫–∫–æ–ª–∏ –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è –±—Ä–æ–∫–∫–æ–ª–∏
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –ú–æ—Ä–∫–æ–≤—å –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω–∞—è –º–æ—Ä–∫–æ–≤—å
–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å–µ—Ä–≤—ã: –°–∫–≤–æ—à –ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—ã–π —Å–∫–≤–æ—à
Pufferfish
(in 1.6.15) –†—ã–±–∞-–µ–∂ –ò–≥–ª–æ–±—Ä—é—Ö
Purple Slime Egg
(in 1.6.15) –§–∏–æ–ª–µ—Ç–æ–≤–æ–µ —è–π—Ü–æ —Å–ª–∞–π–º–∞ –Ø–π—Ü–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–≥–æ —Å–ª–∞–π–º–∞
Qi Bean
(in 1.6.15) –°–µ–º—è –ö–∏ –ë–æ–± –ö–∏
Qi Gem –î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –∫–∞–º–µ–Ω—å –ö–∏ –°–∞–º–æ—Ü–≤–µ—Ç –ö–∏
Red Slime Egg
(in 1.6.15) –ö—Ä–∞—Å–Ω–æ–µ —è–π—Ü–æ —Å–ª–∞–π–º–∞ –Ø–π—Ü–æ –∫—Ä–∞—Å–Ω–æ–≥–æ —Å–ª–∞–π–º–∞
Slime Crate
(in 1.6.15) –Ø—â–∏–∫ —Å–ª–∞–π–º–∞ –Ø—â–∏–∫ –¥–ª—è —Å–ª–∞–π–º–∞
Smoked Fish <item name> (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π <item name>
–†—ã–±–∞-–µ–∂ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ä—ã–±–∞-–µ–∂ (in 1.6.9)
–ö–æ–ø—á–µ–Ω—ã–π –∏–≥–ª–æ–±—Ä—é—Ö (in 1.6.15)
–°–∞—Ä–¥–∏–Ω–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Å–∞—Ä–¥–∏–Ω–∞
–†–∞–¥—É–∂–Ω–∞—è —Ñ–æ—Ä–µ–ª—å (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ä–∞–¥—É–∂–Ω–∞—è —Ñ–æ—Ä–µ–ª—å
–©—É–∫–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —â—É–∫–∞
–ë–∞—Ä–∞–±—É–ª—å–∫–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –±–∞—Ä–∞–±—É–ª—å–∫–∞
–°–µ–ª—å–¥—å (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Å–µ–ª—å–¥—å
–†—ã–±–∞-–∫–∞–º–µ–Ω—å (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ä—ã–±–∞-–∫–∞–º–µ–Ω—å
–ö—Ä–∏–º–∑–æ–Ω—Ñ–∏—à (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –ë–∞–≥—Ä—è–Ω–Ω–∏–∫
–ú–æ—Ä—Å–∫–æ–π —á–µ—Ä—Ç (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –ú–æ—Ä—Å–∫–æ–π —á–µ—Ä—Ç
–õ–µ–≥–µ–Ω–¥–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –õ–µ–≥–µ–Ω–¥–∞
–ú–µ–ª–∫–∞—è –∫–∞–º–±–∞–ª–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –º–µ–ª–∫–∞—è –∫–∞–º–±–∞–ª–∞ (in 1.6.9)
–ö–æ–ø—á–µ–Ω–∞—è –∫–∞–º–±–∞–ª–∞ (in 1.6.15)
–ö–∞—Ä–ø-–º—É—Ç–∞–Ω—Ç (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –ö–∞—Ä–ø-–º—É—Ç–∞–Ω—Ç
–¢–∏–≥—Ä–æ–≤–∞—è —Ñ–æ—Ä–µ–ª—å (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ç–∏–≥—Ä–æ–≤–∞—è —Ñ–æ—Ä–µ–ª—å
–¢–∏–ª—è–ø–∏—è (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ç–∏–ª—è–ø–∏—è
–î–æ—Ä–∞–¥–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –¥–æ—Ä–∞–¥–∞
–ö–∞–º–±–∞–ª–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –∫–∞–º–±–∞–ª–∞ (in 1.6.9)
–ö–æ–ø—á–µ–Ω—ã–π –ø–∞–ª—Ç—É—Å (in 1.6.15)
–°–µ—Ä–¥—Ü–µ–≤–∏–¥–∫–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Å–µ—Ä–¥—Ü–µ–≤–∏–¥–∫–∞
–ú–∏–¥–∏—è (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –º–∏–¥–∏—è
–ö—Ä–µ–≤–µ—Ç–∫–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –∫—Ä–µ–≤–µ—Ç–∫–∞
–£–ª–∏—Ç–∫–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —É–ª–∏—Ç–∫–∞
–õ–∏—Ç–æ—Ä–∏–Ω–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –ª–∏—Ç–æ—Ä–∏–Ω–∞
–£—Å—Ç—Ä–∏—Ü–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —É—Å—Ç—Ä–∏—Ü–∞
–õ–µ–¥–æ—Ä—ã–± (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –õ–µ–¥–æ—Ä—ã–±
–ñ—É—Ç—å-—Ä—ã–±–∞ (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –∂—É—Ç—å-—Ä—ã–±–∞
–†—ã–±–∞-–ø—É–∑—ã—Ä—å (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è —Ä—ã–±–∞-–ø—É–∑—ã—Ä—å
–°—ã–Ω –ö—Ä–∏–º–∑–æ–Ω—Ñ–∏—à (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –ú–∞–ª–µ–∫ –ë–∞–≥—Ä—è–Ω–Ω–∏–∫–∞
–ú–∏—Å—Å –ú–æ—Ä—Å–∫–æ–π —á–µ—Ä—Ç (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –ú–∏—Å—Å –ú–æ—Ä—Å–∫–æ–π —á–µ—Ä—Ç
–õ–µ–≥–µ–Ω–¥–∞ II (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω–∞—è –õ–µ–≥–µ–Ω–¥–∞ II
–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞—Ä–ø (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞—Ä–ø
–õ–µ–¥–æ—Ä—ã–± –ú–ª. (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –õ–µ–¥–æ—Ä—ã–±-–º–ª–∞–¥—à–∏–π
–ú–æ—Ä—Å–∫–æ–π —ë—Ä—à (–∑–∞–∫–æ–ø—á–µ–Ω–æ) –ö–æ–ø—á–µ–Ω—ã–π –º–æ—Ä—Å–∫–æ–π —ë—Ä—à (in 1.6.9)
–ö–æ–ø—á–µ–Ω–∞—è –∫—Ä—ã–ª–∞—Ç–∫–∞ (in 1.6.15)
Son of Crimsonfish –°—ã–Ω –ö—Ä–∏–º–∑–æ–Ω—Ñ–∏—à –ú–∞–ª–µ–∫ –ë–∞–≥—Ä—è–Ω–Ω–∏–∫–∞
Statue of Endless Fortune –°—Ç–∞—Ç—É—è –í–µ—á–Ω–æ–π –£–¥–∞—á–∏ –°—Ç–∞—Ç—É—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —É–¥–∞—á–∏
Stonefish –ö–∞–º–µ–Ω—å-—Ä—ã–±–∞ –†—ã–±–∞-–∫–∞–º–µ–Ω—å
Sunfish –°–∞–Ω—Ñ–∏—à –°–æ–ª–Ω–µ—á–Ω–∏–∫
Sweet Gem Berry –°–ª–∞–¥–∫–∞—è —è–≥–æ–¥–∫–∞ –°–ª–∞–¥–∫–∞—è —Å–∞–º–æ—Ü–≤–µ—Ç–∏–Ω–∫–∞
Tall Torch –°—Ç–æ—è—á–∏–π —Ñ–∞–∫–µ–ª –î–ª–∏–Ω–Ω—ã–π —Ñ–∞–∫–µ–ª
The Art O' Crabbing –ò—Å–∫—É—Å—Å—Ç–≤–æ –∫—Ä–∞–±—Å—Ç–≤–∞ –ö—Ä–∞–±–æ–ª–æ–≤–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ
Unmilled Rice –ù–µ–∏–∑–º–µ–ª—å—á–µ–Ω–Ω—ã–π —Ä–∏—Å –ù–µ–æ—á–∏—â–µ–Ω–Ω—ã–π —Ä–∏—Å
Way Of The Wind pt. 1 –ü—É—Ç—å –í–µ—Ç—Ä–∞, —á. 1 –ü—É—Ç—å –í–µ—Ç—Ä–∞, —Ç–æ–º 1
Way Of The Wind pt. 2 –ü—É—Ç—å –í–µ—Ç—Ä–∞, —á. 2 –ü—É—Ç—å –í–µ—Ç—Ä–∞, —Ç–æ–º 2
Wild Plum –ß–µ—Ä–Ω–∞—è —Å–ª–∏–≤–∞ –î–∏–∫–∞—è —Å–ª–∏–≤–∞
Wine –í–∏–Ω–æ (–†–µ–≤–µ–Ω—å) –í–∏–Ω–æ –∏–∑ —Ä–µ–≤–µ–Ω—è
–í–∏–Ω–æ (–î—ã–Ω—è) –í–∏–Ω–æ –∏–∑ –¥—ã–Ω–∏
–í–∏–Ω–æ (–ß–µ—Ä–Ω–∏–∫–∞) –ß–µ—Ä–Ω–∏—á–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ñ–≥—É—á–∏–π –ø–µ—Ä–µ—Ü) –í–∏–Ω–æ –∏–∑ –∂–≥—É—á–µ–≥–æ –ø–µ—Ä—Ü–∞
–í–∏–Ω–æ (–ö–∞—Ä–∞–º–±–æ–ª–∞) –í–∏–Ω–æ –∏–∑ –∫–∞—Ä–∞–º–±–æ–ª—ã
–í–∏–Ω–æ (–ö–ª—é–∫–≤–∞) –ö–ª—é–∫–≤–µ–Ω–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ú–æ—Ä–æ—à–∫–∞) –í–∏–Ω–æ –∏–∑ –º–æ—Ä–æ—à–∫–∏
–í–∏–Ω–æ (–û—Å—Ç—Ä–∞—è —è–≥–æ–¥–∞) –í–∏–Ω–æ –∏–∑ –æ—Å—Ç—Ä–æ–π —è–≥–æ–¥—ã
–í–∏–Ω–æ (–í–∏–Ω–æ–≥—Ä–∞–¥) –í–∏–Ω–æ–≥—Ä–∞–¥–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ö–ª—É–±–Ω–∏–∫–∞) –ö–ª—É–±–Ω–∏—á–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–î–∏–∫–∞—è —Å–ª–∏–≤–∞) –í–∏–Ω–æ –∏–∑ –¥–∏–∫–æ–π —Å–ª–∏–≤—ã
–í–∏–Ω–æ (–ï–∂–µ–≤–∏–∫–∞) –ï–∂–µ–≤–∏—á–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π —Ñ—Ä—É–∫—Ç) –í–∏–Ω–æ –∏–∑ –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–≥–æ —Ñ—Ä—É–∫—Ç–∞
–í–∏–Ω–æ (–î—Ä–µ–≤–Ω–∏–π –ø–ª–æ–¥) –í–∏–Ω–æ –∏–∑ –¥—Ä–µ–≤–Ω–µ–≥–æ –ø–ª–æ–¥–∞
–í–∏–Ω–æ (–Ø–±–ª–æ–∫–æ) –Ø–±–ª–æ—á–Ω–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ê–±—Ä–∏–∫–æ—Å) –ê–±—Ä–∏–∫–æ—Å–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ê–ø–µ–ª—å—Å–∏–Ω) –ê–ø–µ–ª—å—Å–∏–Ω–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ü–µ—Ä—Å–∏–∫) –ü–µ—Ä—Å–∏–∫–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ì—Ä–∞–Ω–∞—Ç) –ì—Ä–∞–Ω–∞—Ç–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–í–∏—à–Ω—è) –í–∏—à–Ω–µ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ê–Ω–∞–Ω–∞—Å) –ê–Ω–∞–Ω–∞—Å–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ú–∞–Ω–≥–æ) –ú–∞–Ω–≥–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–§—Ä—É–∫—Ç –ö–∏) –í–∏–Ω–æ –∏–∑ —Ñ—Ä—É–∫—Ç–∞ –ö–∏
–í–∏–Ω–æ (–ö–æ–∫–æ—Å) –ö–æ–∫–æ—Å–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ü–ª–æ–¥ –∫–∞–∫—Ç—É—Å–∞) –ö–∞–∫—Ç—É—Å–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–ë–∞–Ω–∞–Ω) –ë–∞–Ω–∞–Ω–æ–≤–æ–µ –≤–∏–Ω–æ
–í–∏–Ω–æ (–°–Ω–µ–≥–æ–¥—ã–Ω—è) –í–∏–Ω–æ –∏–∑ —Å–Ω–µ–≥–æ–¥—ã–Ω–∏
Spanish
item old name new name
Glacierfish Jr. Pez glacial j√≥ven Pez glacial joven
Haley's Lost Bracelet Haley's Lost Bracelet El brazalete perdido de Haley
Item Pedestal Item Pedestal Pedestal para objetos
Stardrop Tea T√© de fruta estelar. T√© de fruta estelar
Tent Kit Kit de tienda de campa√±a. Kit de tienda de campa√±a
Treasure Totem Totem del tesoro T√≥tem del tesoro
Warp Totem: Island Totem de teletransporte: Isla T√≥tem de teletransporte: Isla
Turkish
item old name new name
Aged Roe (unflavored) Olgun Yumurta Olgun Balƒ±k Yumurtasƒ±
Algae Soup Yosun √áorbasƒ± Su Yosunu √áorbasƒ±
Big Green Cane B√ºy√ºk Ye≈üil ≈ûekerkamƒ±≈üƒ± B√ºy√ºk Ye≈üil ≈ûeker Kamƒ±≈üƒ±
Big Red Cane B√ºy√ºk Kƒ±rmƒ±zƒ± ≈ûekerkamƒ±≈üƒ± B√ºy√ºk Kƒ±rmƒ±zƒ± ≈ûeker Kamƒ±≈üƒ±
Blueberry Yabanmersini Yaban Mersini
Blueberry Seeds Yabanmersini Tohumu Yaban Mersini Tohumu
Blueberry Tart Yabanmersinli Turta Yaban Mersinli Turta
Broccoli Seeds Brokoli Tohumlarƒ± Brokoli Tohumu
Carrot Seeds Havu√ß Tohumlarƒ± Havu√ß Tohumu
Cask Fƒ±√ßƒ± Varil
Caviar Hayvar Havyar
Coleslaw Lahana Salatasƒ± Kƒ±rmƒ±zƒ± Lahana Salatasƒ±
Dark Sign Kara ƒ∞≈üaret Kara Tabela
Dried Sunflowers Kurumu≈ü Ay√ßicekleri Kurumu≈ü Ay√ßi√ßekleri
Fiddlehead Fern Eƒüreltiotu Eƒürelti Otu
Fiddlehead Risotto Eƒüreltiotlu Pilav Eƒürelti Otlu Pilav
Haley's Lost Bracelet Haley's Lost Bracelet Haley'nin Kayƒ±p Bileziƒüi
Goby Kayabalƒ±ƒüƒ± Ta≈übalƒ±ƒüƒ±
Golden Pumpkin Altƒ±n Balkabaƒüƒ± Altƒ±n Bal Kabaƒüƒ±
Green Canes Ye≈üil ≈ûekerkamƒ±≈ülarƒ± Ye≈üil ≈ûeker Kamƒ±≈ülarƒ±
Hops ≈ûerbet√ßiotu ≈ûerbet√ßi Otu
Hops Starter ≈ûerbet√ßiotu Yeti≈ütirici ≈ûerbet√ßi Otu Yeti≈ütirici
Jelly Marmelat Re√ßel
Loom Dokuma Tezgahƒ± Dokuma Tezg√¢hƒ±
Magma Cap Maƒüma Mantarƒ± Magma Mantarƒ±
Mini-Forge Mini D√∂k√ºmhane Mini Demir Ocaƒüƒ±
Mixed Cane Renkli ≈ûekerkamƒ±≈ülarƒ± Renkli ≈ûeker Kamƒ±≈ülarƒ±
Ostrich Egg Deveku≈üu Yumurtasƒ± Deve Ku≈üu Yumurtasƒ±
Ostrich Incubator Deveku≈üu Kulu√ßka Makinesi Deve Ku≈üu Kulu√ßka Makinesi
Poppyseed Muffin Ha≈üha≈ülƒ± B√∂rek Ha≈üha≈ülƒ± Kek
Powdermelon Seeds Kƒ±≈ü Kavunu Tohumlarƒ± Kƒ±≈ü Kavunu Tohumu
Plush Bunny Pelu≈ü Tav≈üan Pel√º≈ü Tav≈üan
Pumpkin Balkabaƒüƒ± Bal Kabaƒüƒ±
Pumpkin Seeds Balkabaƒüƒ± Tohumu Bal Kabaƒüƒ± Tohumu
Queen Of Sauce Cookbook Sosun Krali√ßesi Yemek Kitabƒ± Soslar Krali√ßesi Yemek Kitabƒ±
Rarecrows Hepsini bul! (1 Hepsini bul! (X/8)
(where X is the rarecrow number)
Red Canes Kƒ±rmƒ±zƒ± ≈ûekerkamƒ±≈ülarƒ± Kƒ±rmƒ±zƒ± ≈ûeker Kamƒ±≈ülarƒ±
Roe Yavru <item name> Yumurtasƒ± <item name> Yumurtasƒ±
Sloth Skeleton L Tembel Hayvan ƒ∞skeleti Tembel Hayvan ƒ∞skeleti (Sol)
Sloth Skeleton M Tembel Hayvan ƒ∞skeleti Tembel Hayvan ƒ∞skeleti (Orta)
Sloth Skeleton R Tembel Hayvan ƒ∞skeleti Tembel Hayvan ƒ∞skeleti (Saƒü)
Stardew Valley Almanac Stardew Valley Yƒ±llƒ±ƒüƒ± Yƒ±ldƒ±z√ßiyi Vadisi Yƒ±llƒ±ƒüƒ±
Stuffing ƒ∞√ß Doldurma
Summer Squash Seeds Yaz Kabak Tohumlarƒ± Yaz Kabaƒüƒ± Tohumu
Workbench √áalƒ±≈üma Tezgahƒ± √áalƒ±≈üma Tezg√¢hƒ±
Furniture
French
item old name new name
Book Stack Pile de livres Tas de livres
J. Cola Light "J. Cola Light" Enseigne murale lumineuse J.Cola
Large Book Stack Grande pile de livres Grand tas de livres
Midnight Beach Bed Lit Lit de plage nocturne
Midnight Beach Double Bed Lit Lit double de plage nocturne
Small Book Stack Petite pile de livres Petit tas de livres
Wizard Bookshelf Biblioth√®que de sorcier √âtag√®re de sorcier
Hungarian
item old name new name
Cat Tree
(in 1.6.15) Macsk√°s fa Macskab√∫tor
Chicken Statue
(in 1.6.15) Csirke szobor Csirkeszobor
Dark Cat Tree
(in 1.6.15) S√∂t√©t macsk√°s fa S√∂t√©t macskab√∫tor
Doghouse
(in 1.6.15) Kutyah√°z Kutya√≥l
Dark Doghouse
(in 1.6.15) S√∂t√©t kutyah√°z S√∂t√©t kutya√≥l
Floor TV
(in 1.6.15) Padl√≥ t√©v√© Padl√≥t√©v√©
Midnight Beach Bed √Ågy √âjf√©li strand √°gy
Midnight Beach Double Bed Dupla √°gy √âjf√©li strand dupla √°gy
Spirits Table
(in 1.6.15) Italos asztal Italosasztal
Wine Table
(in 1.6.15) Boroz√≥ asztal Boroz√≥asztal
Italian
item old name new name
Large Green Rug Tappeto verde gande Tappeto verde grande
Russian
item old name new name
Birch Lamp End Table –ë–µ—Ä–µ–∑–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ –ë–µ—Ä–µ–∑–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ —Å –ª–∞–º–ø–æ–π
Blossom Rug –¶–≤–µ—Ç–æ—á–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –¶–≤–µ—Ç–æ—á–Ω—ã–π –∫–æ–≤–µ—Ä
Bountiful Dining Table –ò–∑–æ–±–∏–ª—å–Ω—ã–π –æ–±–µ–¥–µ–Ω–Ω—ã–π —Å—Ç–æ–ª –û–±–µ–¥–µ–Ω–Ω—ã–π —Å—Ç–æ–ª ¬´–ò–∑–æ–±–∏–ª–∏–µ¬ª
Circular Junimo Rug –ö—Ä—É–≥–ª—ã–π –∫–æ–≤—Ä–∏–∫ –î–∂—É–Ω–∏–º–æ –ö—Ä—É–≥–ª—ã–π –∫–æ–≤–µ—Ä –î–∂—É–Ω–∏–º–æ
'Community Center' ¬´–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä¬ª ¬´–ö–ª—É–±¬ª
Curly Tree –ò–∑–æ–≥–Ω—É—Ç–æ–µ –¥–µ—Ä–µ–≤–æ –ö—É–¥—Ä—è–≤–æ–µ –¥–µ—Ä–µ–≤–æ
Dark Leafy Wall Panel –¢–µ–º–Ω–∞—è –ø–∞–Ω–µ–ª—å ¬´–õ–∏—Å—Ç–≤–∞¬ª –°—Ä–µ–¥–Ω—è—è –ø–∞–Ω–µ–ª—å ¬´–õ–∏—Å—Ç–≤–∞¬ª
Dark Rug –¢–µ–º–Ω—ã–π –ö–æ–≤—Ä–∏–∫ –¢–µ–º–Ω—ã–π –∫–æ–≤–µ—Ä
Decorative Trash Can –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –º—É—Å–æ—Ä–∫–∞ –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º—É—Å–æ—Ä–Ω—ã–π –±–∞–∫
Deluxe Tree –≠–ª–∏—Ç–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ò–∑—ã—Å–∫–∞–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ
Dining Chair
(in 1.6.15) –°—Ç—É–ª –∫ –æ–±–µ–¥–µ–Ω–Ω–æ–º—É —Å—Ç–æ–ª—É –û–±–µ–¥–µ–Ω–Ω—ã–π —Å—Ç—É–ª
Elixir Shelf –ü–æ–ª–∫–∞ –¥–ª—è —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –ü–æ–ª–∫–∞ —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Elixir Table –°—Ç–æ–ª –¥–ª—è —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –°—Ç–æ–ª —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Funky Rug –ú–æ–¥–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –ú–æ–¥–Ω—ã–π –∫–æ–≤–µ—Ä
Green Plush Seat –ó–µ–ª–µ–Ω–æ–µ –ø–ª—é—à–µ–≤–æ–µ —Å–∏–¥–µ–Ω–∏–µ –ó–µ–ª–µ–Ω–æ–µ –ø–ª—é—à–µ–≤–æ–µ —Å–∏–¥–µ–Ω—å–µ
'Groovy' ¬´–ö–ª–µ–≤–æ¬ª ¬´–í–æ–ª–Ω–∏—Å—Ç—ã–µ –ª–∏–Ω–∏–∏¬ª
Harvey Portrait –ü–æ—Ä—Ç—Ä–µ—Ç –•—ç–π–ª–∏ –ü–æ—Ä—Ç—Ä–µ—Ç –•–∞—Ä–≤–∏
Icy Rug –õ–µ–¥—è–Ω–æ–π –∫–æ–≤—Ä–∏–∫ –õ–µ–¥—è–Ω–æ–π –∫–æ–≤–µ—Ä
Indoor Hanging Basket –ö–æ–º–Ω–∞—Ç–Ω–∞—è –≤–∏—Å—è—á–∞—è –∫–æ—Ä–∑–∏–Ω–∞ –ö–æ–º–Ω–∞—Ç–Ω–∞—è –ø–æ–¥–≤–µ—Å–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∞
J –î–∂–µ–π –ë—É–∫–≤–∞ ¬´J¬ª
'Jade Hills Extended' ¬´–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–µ —Ö–æ–ª–º—ã¬ª (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è) ¬´–ù–µ—Ñ—Ä–∏—Ç–æ–≤—ã–µ —Ö–æ–ª–º—ã¬ª (—à–∏—Ä–æ–∫–∞—è –≤–µ—Ä—Å–∏—è)
Joja Cola Tea Table –ß–∞–π–Ω—ã–π —Å—Ç–æ–ª–∏–∫ –î–∂–æ–¥–∂–∞-–∫–æ–ª–∞ –ß–∞–π–Ω—ã–π —Å—Ç–æ–ª–∏–∫ ¬´–î–∂–æ–¥–∂–∞-–∫–æ–ª–∞¬ª
'Journey Of The Prairie King: The Motion Picture' ¬´–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ö–æ—Ä–æ–ª—è –ü—Ä–µ—Ä–∏–π: –§–∏–ª—å–º¬ª ¬´–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ö–æ—Ä–æ–ª—è –ø—Ä–µ—Ä–∏–π: –•—É–¥. —Ñ–∏–ª—å–º¬ª
Junimo Bag –°—É–º–∫–∞ –î–∂—É–Ω–∏–º–æ –ú–µ—à–æ—á–µ–∫ –î–∂—É–Ω–∏–º–æ
Junimo Bundle –°–≤–µ—Ä—Ç–æ–∫ –î–∂—É–Ω–∏–º–æ –£–∑–µ–ª–æ–∫ –î–∂—É–Ω–∏–º–æ
Junimo Mat –ú–∞—Ç –î–∂—É–Ω–∏–º–æ –ö–æ–≤—Ä–∏–∫ –î–∂—É–Ω–∏–º–æ
Junimo Plaque –¢–∞–±–ª–∏—á–∫–∞ –î–∂—É–Ω–∏–º–æ –ü–ª–∞—Å—Ç–∏–Ω–∞ –î–∂—É–Ω–∏–º–æ
Junimo Rug –ö–æ–≤—Ä–∏–∫ –î–∂—É–Ω–∏–º–æ –ö–æ–≤–µ—Ä –î–∂—É–Ω–∏–º–æ
Junimo Wall Plaque –ù–∞—Å—Ç–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—á–∫–∞ –î–∂—É–Ω–∏–º–æ –ù–∞—Å—Ç–µ–Ω–Ω–∞—è –ø–ª–∞—Å—Ç–∏–Ω–∞ –î–∂—É–Ω–∏–º–æ
Large Cottage Rug –ë–æ–ª—å—à–æ–π –¥–æ–º–∞—à–Ω–∏–π –∫–æ–≤—Ä–∏–∫ –ë–æ–ª—å—à–æ–π –¥–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–π –∫–æ–≤–µ—Ä
Large Green Rug –ë–æ–ª—å—à–æ–π –∑–µ–ª–µ–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –ë–æ–ª—å—à–æ–π –∑–µ–ª–µ–Ω—ã–π –∫–æ–≤–µ—Ä
Large Joja Rug –ë–æ–ª—å—à–æ–π –∫–æ–≤—Ä–∏–∫ –î–∂–æ–¥–∂–∞ –ë–æ–ª—å—à–æ–π –∫–æ–≤–µ—Ä –î–∂–æ–¥–∂–∞
Large Red Rug –ë–æ–ª—å—à–æ–π –∫—Ä–∞—Å–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –ë–æ–ª—å—à–æ–π –∫—Ä–∞—Å–Ω—ã–π –∫–æ–≤–µ—Ä
Large Retro Rug –ë–æ–ª—å—à–æ–π –∫–æ–≤—Ä–∏–∫ ¬´–†–µ—Ç—Ä–æ¬ª –ë–æ–ª—å—à–æ–π –∫–æ–≤–µ—Ä ¬´–†–µ—Ç—Ä–æ¬ª
Light Green Rug –ö–æ–≤—Ä–∏–∫ ¬´–ó–µ–ª–µ–Ω—ã–µ –ª–∏—Å—Ç—å—è¬ª –ö–æ–≤–µ—Ä ¬´–ó–µ–ª–µ–Ω—ã–µ –ª–∏—Å—Ç—å—è¬ª
Light Leafy Wall Panel –°–≤–µ—Ç–ª–∞—è –ø–∞–Ω–µ–ª—å ¬´–õ–∏—Å—Ç–≤–∞¬ª –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞–Ω–µ–ª—å ¬´–õ–∏—Å—Ç–≤–∞¬ª
Log Panel –ü–∞–Ω–µ–ª—å ¬´–ë—Ä–µ–≤–Ω–æ¬ª –ë—Ä–µ–≤–µ–Ω—á–∞—Ç–∞—è –ø–∞–Ω–µ–ª—å
Long Elixir Table –î–ª–∏–Ω–Ω—ã–π —Å—Ç–æ–ª –¥–ª—è —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –î–ª–∏–Ω–Ω—ã–π —Å—Ç–æ–ª —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Mahogany Lamp End Table –ü—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ –∏–∑ –∫—Ä–∞—Å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ü—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ –∏–∑ –∫—Ä–∞—Å–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ —Å –ª–∞–º–ø–æ–π
Midnight Beach Bed –ö—Ä–æ–≤–∞—Ç—å –ö—Ä–æ–≤–∞—Ç—å ¬´–ü–æ–ª–Ω–æ—á—å –Ω–∞ –ø–ª—è–∂–µ¬ª
Midnight Beach Double Bed –î–≤—É—Å–ø–∞–ª—å–Ω–∞—è –∫—Ä–æ–≤–∞—Ç—å –î–≤—É—Å–ø–∞–ª—å–Ω–∞—è –∫—Ä–æ–≤–∞—Ç—å ¬´–ü–æ–ª–Ω–æ—á—å –Ω–∞ –ø–ª—è–∂–µ¬ª
Modern Fish Tank –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–∫–≤–∞—Ä–∏—É–º –ê–∫–≤–∞—Ä–∏—É–º ¬´–ú–æ–¥–µ—Ä–Ω¬ª
Modern Rug –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –ö–æ–≤–µ—Ä ¬´–ú–æ–¥–µ—Ä–Ω¬ª
Oak Lamp End Table –î—É–±–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ –î—É–±–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ —Å –ª–∞–º–ø–æ–π
Old World Rug –°—Ç–∞—Ä—ã–π –ø—Ä–æ—Ç–µ—Ä—Ç—ã–π –∫–æ–≤—Ä–∏–∫ –°—Ç–∞—Ä—ã–π –ø—Ä–æ—Ç–µ—Ä—Ç—ã–π –∫–æ–≤–µ—Ä
Patchwork Rug –õ–æ—Å–∫—É—Ç–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –õ–æ—Å–∫—É—Ç–Ω—ã–π –∫–æ–≤–µ—Ä
Pink Plush Seat –†–æ–∑–æ–≤–æ–µ –ø–ª—é—à–µ–≤–æ–µ —Å–∏–¥–µ–Ω–∏–µ –†–æ–∑–æ–≤–æ–µ –ø–ª—é—à–µ–≤–æ–µ —Å–∏–¥–µ–Ω—å–µ
Retro Banner –ü–ª–∞–∫–∞—Ç ¬´–†–µ—Ç—Ä–æ¬ª –ë–∞–Ω–Ω–µ—Ä ¬´–†–µ—Ç—Ä–æ¬ª
Retro Mat –ú–∞—Ç ¬´–†–µ—Ç—Ä–æ¬ª –ú–∞–ª–µ–Ω—å–∫–∏–π –∫–æ–≤—Ä–∏–∫ ¬´–†–µ—Ç—Ä–æ¬ª
Retro Rug –ö–æ–≤—Ä–∏–∫ ¬´–†–µ—Ç—Ä–æ¬ª –ö–æ–≤–µ—Ä ¬´–†–µ—Ç—Ä–æ¬ª
Rune Rug
(in 1.6.15) –†—É–Ω–Ω—ã–π –∫–æ–≤—Ä–∏–∫ –†—É–Ω–∏—á–µ—Å–∫–∏–π –∫–æ–≤—Ä–∏–∫
Small Book Pile –ö—É—á–∫–∞ –∫–Ω–∏–≥ –ù–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥
Small Book Stack –°—Ç–æ–ø–æ—á–∫–∞ –∫–Ω–∏–≥ –ú–∞–ª–∞—è —Å—Ç–æ–ø–∫–∞ –∫–Ω–∏–≥
Small Elixir Shelf –ü–æ–ª–æ—á–∫–∞ –¥–ª—è —ç–ª–∏–∫—Å–∏—Ä–æ–≤ –£–∑–∫–∞—è –ø–æ–ª–∫–∞ —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Small Junimo Mat –ú–∞–ª–µ–Ω—å–∫–∏–π –º–∞—Ç –î–∂—É–Ω–∏–º–æ –ú–∞–ª–µ–Ω—å–∫–∏–π –∫–æ–≤—Ä–∏–∫ –î–∂—É–Ω–∏–º–æ
Small Stacked Elixir Shelf –ó–∞—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏ –ø–æ–ª–æ—á–∫–∞ –î–≤–æ–π–Ω–∞—è —É–∑–∫–∞—è –ø–æ–ª–∫–∞ —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Stacked Elixir Shelf –ó–∞—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏ –ø–æ–ª–∫–∞ –î–≤–æ–π–Ω–∞—è –ø–æ–ª–∫–∞ —Å —ç–ª–∏–∫—Å–∏—Ä–∞–º–∏
Stacked Joja Boxes –ö—É—á–∞ –∫–æ—Ä–æ–±–æ–∫ –î–∂–æ–¥–∂–∞ –°—Ç–æ–ø–∫–∞ –∫–æ—Ä–æ–±–æ–∫ –î–∂–æ–¥–∂–∞
Standing Geode –°—Ç–æ—è—á–∞—è –∂–µ–æ–¥–∞ –ñ–µ–æ–¥–∞ –Ω–∞ –ø–æ–¥—Å—Ç–∞–≤–∫–µ
Starry Double Bed –ó–≤–µ–∑–¥–Ω–∞—è –¥–≤—É—Å–ø–∞–ª—å–Ω–∞—è –∫—Ä–æ–≤–∞—Ç—å –ó–≤–µ–∑–¥—á–∞—Ç–∞—è –¥–≤—É—Å–ø–∞–ª—å–Ω–∞—è –∫—Ä–æ–≤–∞—Ç—å
Starry Moon Rug –ö–æ–≤—Ä–∏–∫ —Å–æ –∑–≤–µ–∑–¥–Ω–æ–π –Ω–æ—á—å—é –ö–æ–≤–µ—Ä ¬´–ó–≤–µ–∑–¥–Ω–∞—è –Ω–æ—á—å¬ª
'Sun #44' ¬´–°–æ–ª–Ω—Ü–µ ‚Ññ44¬ª ¬´–°–æ–ª–Ω—Ü–µ ‚Ññ 44¬ª
'Sun #45' ¬´–°–æ–ª–Ω—Ü–µ ‚Ññ45¬ª ¬´–°–æ–ª–Ω—Ü–µ ‚Ññ 45¬ª
Swirl Rug –ö–æ–≤—Ä–∏–∫ —Å –∑–∞–≤–∏—Ö—Ä–µ–Ω–∏—è–º–∏ –ö–æ–≤–µ—Ä —Å –∑–∞–≤–∏—Ö—Ä–µ–Ω–∏—è–º–∏
'VGA Paradise' ¬´VGA-—Ä–∞–π¬ª ¬´–†–∞–π VGA¬ª
Wallflower Pal –î—Ä—É–∂–æ–∫ —É —Å—Ç–µ–Ω–∫–∏ –ù–∞—Å—Ç–µ–Ω–Ω—ã–π –¥—Ä—É–∂–æ–∫
Wall Sconce –ù–∞—Å—Ç–µ–Ω–Ω—ã–π –∫–∞–Ω–¥–µ–ª—è–±—Ä –ù–∞—Å—Ç–µ–Ω–Ω—ã–π —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫
Walnut Lamp End Table –û—Ä–µ—Ö–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ –û—Ä–µ—Ö–æ–≤—ã–π –ø—Ä–∏—Å—Ç–∞–≤–Ω–æ–π —Å—Ç–æ–ª–∏–∫ —Å –ª–∞–º–ø–æ–π
Winter Tree Decal –ù–∞–∫–ª–µ–π–∫–∞ ¬´–ó–∏–º–Ω–µ–µ –¥–µ—Ä–µ–≤–æ¬ª –ù–∞–∫–ª–µ–π–∫–∞ ¬´–ó–∏–º–Ω—è—è –µ–ª—å¬ª
Witch's Broom –ú–µ—Ç–ª–∞ –≤–µ–¥—å–º—ã –í–µ–¥—å–º–∏–Ω–∞ –º–µ—Ç–ª–∞
Wood Panel –ü–∞–Ω–µ–ª—å ¬´–î–µ—Ä–µ–≤–æ¬ª –î–æ—â–∞—Ç–∞—è –ø–∞–Ω–µ–ª—å
Spanish
item old name new name
Modern Fish Tank Pecera mdoerna Pecera moderna
Turkish
item old name new name
Aquamarine Crystal Ball Deniz Ye≈üili Kristal K√ºre G√∂k Z√ºmr√ºt√º Kristal K√ºre
Birch Dresser Hu≈ü ≈ûifoniyer Hu≈ü ≈ûifonyer
Book Pile Kitap Yƒ±ƒüƒ±nƒ± Yƒ±ƒüƒ±lmƒ±≈ü Kitaplar
Green Cottage Rug Ye≈üil Baraka Ye≈üil Baraka Kilimi
Green Serpent Statue Ye≈üil Kertenkele Heykeli Ye≈üil Yƒ±lan Heykeli
J. Cola Light Diyet J. Kola J. Kola I≈üƒ±ƒüƒ±
Joja Crate Joja Sandƒ±ƒüƒ± Joja Kutusu
Journey Of The Prairie King: The Motion Picture '√áayƒ±r Kralƒ±'nƒ±n Yolculuƒüu' '√áayƒ±r Kralƒ±'nƒ±n Yolculuƒüu: Sinema Filmi'
Junimo Plush Pelu≈ü Junimo Pel√º≈ü Junimo
Krobus Portrait Krobus'in Portresi Krobus'un Portresi
Large Book Pile B√ºy√ºk Kitap Yƒ±ƒüƒ±nƒ± B√ºy√ºk Yƒ±ƒüƒ±lmƒ±≈ü Kitaplar
Large Joja Crate B√ºy√ºk Joja Sandƒ±ƒüƒ± B√ºy√ºk Joja Kutusu
Leah Portrait Leah'ƒ±n Portresi Leah'nƒ±n Portresi
Leah's Sculpture Leah'ƒ±n Heykeli Leah'nƒ±n Heykeli
Mahogany Bench Mahun Oturak Maun Oturak
Mahogany Chair Mahun Sandalye Maun Sandalye
Mahogany Dining Table Mahun Yemek Masasƒ± Maun Yemek Masasƒ±
Mahogany Dresser Mahun ≈ûifoniyer Maun ≈ûifonyer
Mahogany End Table Mahun Komodin Maun Komodin
Mahogany Table Mahun Masa Maun Masa
Mahogany Tea-Table Mahun Sehpa Maun Sehpa
Midnight Beach Bed Yatak Gece Yarƒ±sƒ± Kumsallƒ± Yatak
Midnight Beach Double Bed √áift Ki≈üilik Yatak Gece Yarƒ±sƒ± Kumsallƒ± √áift Ki≈üilik Yatak
Modern Rug Modern Kilim Modern Halƒ±
Oak Dresser Me≈üe ≈ûifoniyer Me≈üe ≈ûifonyer
Pierre's Sign Pierre'nin Tabelasƒ± Pierre'in Tabelasƒ±
Purple Serpent Statue Mor Kertenkele Heykeli Mor Yƒ±lan Heykeli
Red Cottage Rug Kƒ±rmƒ±zƒ± Baraka Kƒ±rmƒ±zƒ± Baraka Kilimi
Short Wizard Bookcase K√º√ß√ºk B√ºy√ºc√º Kitaplƒ±ƒüƒ± Kƒ±sa B√ºy√ºc√º Kitaplƒ±ƒüƒ±
Small Book Pile K√º√ß√ºk Kitap Yƒ±ƒüƒ±nƒ± K√º√ß√ºk Yƒ±ƒüƒ±lmƒ±≈ü Kitaplar
Small Junimo Plush K√º√ß√ºk Junimo Pelu≈üu K√º√ß√ºk Junimo Pel√º≈ü√º
'The Brave Little Sapling' 'Cesur Fidan' 'K√º√ß√ºk Cesur Fidan'
Tree of the Winter Star Kƒ±≈üyƒ±ldƒ±zƒ± Aƒüacƒ± Kƒ±≈ü Yƒ±ldƒ±zƒ± Aƒüacƒ±
Walnut Dresser Ceviz ≈ûifoniyer Ceviz ≈ûifonyer
Wizard Bookshelf B√ºy√ºc√º Kitaplƒ±ƒüƒ± B√ºy√ºc√º Rafƒ±
Hats
French
item old name new name
blue Bow Ruban bleu Noeud ruban bleu
Fedora Fedora F√©dora
German
item old name new name
Bucket Hat Fischerhut Bucket-Hut
Panda Hat Panda Hat Panda-Hut
Russian
item old name new name
Arcane Hat –ó–∞–≥–∞–¥–æ—á–Ω–∞—è —à–ª—è–ø–∞ –¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —à–ª—è–ø–∞
Flat Topped Hat –ö–∞–Ω–æ—Ç—å–µ –ö–∞–ø–æ—Ç–µ–Ω
Laurel Wreath Crown –õ–∞–≤—Ä–æ–≤–∞—è –∫–æ—Ä–æ–Ω–∞ –õ–∞–≤—Ä–æ–≤—ã–π –≤–µ–Ω–æ–∫
Spanish
item old name new name
Gold Pan Sart√©n de Oro Cacerola de Oro
Iridium Pan Sart√©n de Iridio Cacerola de Iridio
Steel Pan Sart√©n de Acero Cacerola de Acero
Totem Mask M√°scara totem M√°scara t√≥tem
Turkish
item old name new name
Arcane Hat Gizemli ≈ûapka B√ºy√ºc√º ≈ûapkasƒ±
Copper Pan Bakƒ±r Tava Bakƒ±r Eleme Tavasƒ±
Flat Topped Hat F√∂tr ≈ûapka Seyyah ≈ûapkasƒ±
Leprechaun Hat C√ºce ≈ûapkasƒ± C√ºce Cin ≈ûapkasƒ±
Movie concessions
Hungarian
item old name new name
Cappuccino Mousse Cake
(in 1.6.15) Kapuccsin√≥ habos torta Kapucs√≠n√≥ habos torta
Pants
German
item old name new name
Island Bikini Island Bikini Insel Bikini
Prismatic Pants Prismatic Pants Prisma Hose
Japanese
item old name new name
Messy Shorts
(in 1.6.15) Êï£„Çâ„Åã„Å£„Åü„Ç∑„É£„ÉÑ Êï£„Çâ„Åã„Å£„Åü„Éë„É≥„ÉÑ
Turkish
item old name new name
Trimmed Lucky Purple Shorts ƒ∞≈ülemeli Mor ≈ûort ƒ∞≈ülemeli ≈ûanslƒ± Mor ≈ûort
Shirts
French
item old name new name
gender-variant shirts "(M)" suffix "(H)" suffix
Island Bikini Island Bikini Bikini des √Æles
German
item old name new name
Hot Pink Shirt Hot Pink Shirt Pinkes Hemd
Italian
item old name new name
Island Bikini Island Bikini Bikini delle isole
Japanese
item old name new name
gender-variant shirts " (F)" and " (M)" suffixes "ÔºàÂ•≥Ôºâ" and "ÔºàÁî∑Ôºâ" suffixes
Island Bikini Island Bikini „Ç¢„Ç§„É©„É≥„Éâ„Éì„Ç≠„Éã
Korean
item old name new name
gender-variant shirts "(F)" and "(M)" suffixes "(Ïó¨)" and "(ÎÇ®)" suffixes
Island Bikini Island Bikini ÏÑ¨ ÎπÑÌÇ§Îãà
Russian
item old name new name
Midnight Dog Jacket –ö—É—Ä—Ç–∫–∞ –ø–æ–ª–Ω–æ—á–Ω–æ–≥–æ –ø—Å–∞ –ö—É—Ä—Ç–∫–∞ –ø–æ–ª—É–Ω–æ—á–Ω–æ–≥–æ –ø—Å–∞
Mineral Dog Jacket –ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –∫—É—Ä—Ç–∫–∞ –¥–ª—è —Å–æ–±–∞–∫–∏ –ö—É—Ä—Ç–∫–∞ –º–∏–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø—Å–∞
Prismatic Shirt –ü—Ä–∏–∑–º–∞—Ç–∏—á–Ω–∞—è —Ä—É–±–∞—à–∫–∞ –†–∞–¥—É–∂–Ω–∞—è —Ä—É–±–∞—à–∫–∞
Spanish
item old name new name
Island Bikini Island Bikini Bikini isle√±o
Turkish
item old name new name
gender-variant shirts "(F)" and "(M)" suffixes "(K)" and "(E)" suffixes
Aquamarine Shirt Deniz Ye≈üili Ti≈ü√∂rt G√∂k Z√ºmr√ºt√º Ti≈ü√∂rt
Midnight Dog Jacket Geceyarƒ±sƒ± Ceketi Gece Yarƒ±sƒ± Ceketi
Tan Striped Shirt √áizgili Tenrengi Ti≈ü√∂rt √áizgili Ten Rengi Ti≈ü√∂rt
Tools
German
item old name new name
upgradeable tools <level> <tool> (like Stahl-Axt) <level><tool> (like StahlAxt)
Hungarian
item old name new name
upgradeable tools <level> <tool> (like Ac√©l Balta) <level><tool> (like Ac√©lbalta)
Milk Pail
(in 1.6.15) Tejes v√∂d√∂r Tejesv√∂d√∂r
Japanese
item old name new name
upgradeable tools <level> <tool> (like Èãº „Ç™„Éé) <level>„ÅÆ<tool> (like Èãº„ÅÆ„Ç™„Éé)
Korean
item old name new name
Bamboo Pole ÎåÄÎÇòÎ¨¥ ÎßâÎåÄ ÎåÄÎÇòÎ¨¥ ÎÇöÏãØÎåÄ
Russian
item old name new name
upgradeable tools <tool> (<level>) (like –¢–æ–ø–æ—Ä (–ú–µ–¥—å)) <level> <tool> (like –ú–µ–¥–Ω—ã–π —Ç–æ–ø–æ—Ä)
Spanish
item old name new name
Advanced Iridium Rod Barra de Iridio Avanzada Ca√±a de Iridio Avanzada
Turkish
item old name new name
Advanced Iridium Rod Geli≈ümi≈ü ƒ∞ridyum Oltasƒ± Geli≈ümi≈ü ƒ∞ridyum Olta
Bamboo Pole Bambu Oltasƒ± Bambu Olta
Fiberglass Rod Camy√ºn√º Oltasƒ± Camy√ºn√º Olta
Iridium Rod ƒ∞ridyum Oltasƒ± ƒ∞ridyum Olta
Weapons
Japanese
item old name new name
Galaxy Hammer Galaxy Hammer „ÇÆ„É£„É©„ÇØ„Ç∑„Éº„Éè„É≥„Éû„Éº
Hungarian
item old name new name
Golden Scythe
(in 1.6.15) Arany kasza Aranykasza
Turkish
item old name new name
Elliott's Pencil Elliot'ƒ±n Kalemi Elliott'ƒ±n Kalemi
Animals
Russian
animal old name new name
Blue Chicken –ì–æ–ª—É–±–∞—è –∫—É—Ä–∏—Ü–∞ –°–∏–Ω—è—è –∫—É—Ä–∏—Ü–∞
Golden Chicken –ó–æ–ª–æ—Ç–æ–π —Ü—ã–ø–ª–µ–Ω–æ–∫ –ó–æ–ª–æ—Ç–∞—è –∫—É—Ä–∏—Ü–∞
Buildings
Hungarian
building old name new name
Pet Bowl
(in 1.6.15) H√°zi√°llat t√°lka H√°zi√°llatt√°lka
Monsters
French
monster old name new name
Pepper Rex Poivron Rex Poivrosaure
Squid Kid Jeune calmar T√™te flottante
German
monster old name new name
Magma Duggy Magma Schwenker Magma-Schwenker
Magma Sparker Magma Sprenger Magma-Sprenger
Magma Sprite Magma Wicht Magma-Wicht
Wilderness Golem Golem der Wildnis Wildnis-Golem
Hungarian
monster old name new name
Carbon Ghost Sz√©n szellem Sz√©nszellem
Iridium Bat Ir√≠dium denev√©r Ir√≠diumdenev√©r
Iridium Crab Ir√≠dium r√°k Ir√≠diumr√°k
Iridium Golem Wilderness Golem Vad g√≥lem
Lava Bat L√°va denev√©r L√°vadenev√©r
Lava Crab L√°va r√°k L√°var√°k
Rock Crab K≈ë r√°k K≈ër√°k
Shadow Brute √Årny√©k √°llat √Årny√©k√°llat
Shadow Shaman √Årny√©k s√°m√°n √Årny√©ks√°m√°n
Tiger Slime Tigris ragacs Tigrisragacs
Truffle Crab Rock Crab K≈ër√°k
Portuguese
monster old name new name
Frost Jelly Geleia congelada Gosma Congelada
Iridium Golem Wilderness Golem Golem Selvagem
Pepper Rex Pimenta Rex Rex Pimenta
Shadow Guy O cara das sombras Homem das Sombras
Skeleton Mage Mago esqueleto Esqueleto Mago
Skeleton Warrior Guerreiro esqueleto Esqueleto Guerreiro
Russian
monster old name new name
Carbon Ghost –£–≥–ª–µ—Ä–æ–¥–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫ –£–≥–ª–µ—Ä–æ–¥–Ω—ã–π –ø—Ä–∏–∑—Ä–∞–∫
Dwarvish Sentry –ß–∞—Å–æ–≤–æ–π –¥–≤–∞—Ä—Ñ–æ–≤ –î–≤–∞—Ä—Ñ–∏–π—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π
Iridium Golem Wilderness Golem –ì–æ–ª–µ–º –∏–∑ –≥–ª—É—à–∏
Shadow Shaman –®–∞–º–∞–Ω —Ç–µ–Ω–µ–π –¢–µ–Ω–µ–≤–æ–π —à–∞–º–∞–Ω
Truffle Crab Rock Crab –ö–∞–º–µ–Ω–Ω—ã–π –∫—Ä–∞–±
Turkish
monster old name new name
Magma Duggy Maƒüma Kazƒ±lcasƒ± Magma Kazƒ±lcasƒ±
Magma Sprite Maƒüma Tayfƒ± Magma Tayfƒ±
Movies
Turkish
movie old name new name
The Brave Little Sapling Cesur Fidan K√º√ß√ºk Cesur Fidan
NPCs
Russian
NPC old name new name
Professor Snail
(in 1.6.15) –ü—Ä–æ—Ñ. –£–ª–∏—Ç–∫–∏–Ω –ü—Ä–æ—Ñ. –£–ª–∏—Ç–∫–∏–Ω—Å
XNB impact
Overview
This section provides a summary of the XNB files which changed in Stardew Valley 1.6.9. This doesn't include new files (since they won't impact existing mods), or text changes in non-English files.
XNB mods are disproportionately affected, since...
they replace the entire file;
they're loaded through the MonoGame content pipeline which is less tolerant of format changes;
they don't benefit from the compatibility rewrites Content Patcher provides for its content packs.
Content Patcher packs are typically unaffected (and Content Patcher will try to rewrite content packs automatically). However if a content pack replaces an entire asset instead of editing, it's more likely to be affected like an XNB mod.
Changed assets
TODO
Removed unused assets
Stardew Valley 1.6.9 deletes assets which weren't used by the game. Mods usually aren't affected by this.
Removed assets:
LooseSprites/buildingPlacementTiles
LooseSprites/DialogBoxGreen
LooseSprites/hoverBox
LooseSprites/robinAtWork
LooseSprites/skillTitles
Maps/cavedarker
Maps/FarmhouseTiles
Maps/GreenhouseInterior
Maps/spring_BusStop
Maps/TownIndoors
Maps/WizardHouseTiles
Maps/WoodBuildings
TerrainFeatures/BuffsIcons
See also
The 1.6.9 release notes list many smaller technical changes not covered on this page.