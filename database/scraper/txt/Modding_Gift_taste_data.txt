Jump to navigation
Jump to search
← Index
This page explains how the game calculates NPC gift tastes. This is an advanced guide for mod developers.
Contents
1 Data
1.1 Raw data
1.2 Format
2 How a gift taste is determined
Data
Raw data
NPC gift tastes are stored in Content\Data\NPCGiftTastes.xnb, which can be unpacked to edit. Here's the raw data as of 1.5.1 for reference:
Data 
Format
The file contains two types of data:
Universal tastes apply to all villagers. Their key is Universal_Taste, and their value is a space-delimited array of reference IDs (object item ID if ≥0, category ID if <0). For example, consider this entry:
  "Universal_Like": "-2 -7 -26 -75 -80 72 395 613 634 635 636 637 638 724 459"
This data means villagers should have a universal like for category -2, object 72, etc.
Personal tastes apply to a specific villager. Their key is the villager's internal name (like Abigail), and their value alternates dialogue text with a list of reference IDs in this order: love, like, dislike, hate, and neutral. For example, consider Abigail's gift tastes:
  "Abigail": " I seriously love this! You're the best, @!/66 128 220 226 276 611/Hey, how'd you know I was hungry? This looks delicious!//What am I supposed to do with this?/-5 -75 -79 16 245 246/What were you thinking? This is awful!/330/You brought me a present? Thanks.// "
By splitting the string with / as the delimiter, we can extract this data:
index taste reaction dialogue reference IDs
0, 1 love I seriously love this! You're the best, @! 66 128 220 226 276 611
2, 3 like Hey, how'd you know I was hungry? This looks delicious! none
4, 5 dislike What am I supposed to do with this? -5 -75 -79 16 245 246
6, 7 hate What were you thinking? This is awful! 330
8, 9 neutral You brought me a present? Thanks. none
This data means she should personally love item 66 (Amethyst), dislike category -5 (eggs), etc.
How a gift taste is determined
The data format allows tastes to conflict in multiple ways:
between an item ID and category ID;
between a universal taste and personal taste;
between conflicting values (e.g., Jodi both loves and hates Daffodils (item ID 18) specifically);
and any combination of the above (e.g., between a universal item ID and personal category ID).
The game uses a rather complicated algorithm to determine how much an NPC likes an gift (see NPC::getGiftTasteForThisItem). Here's a cleaned up version of the algorithm in pseudocode:
var TASTE = neutral
bool HAS_UNIVERSAL_ID = false
bool HAS_UNIVERSAL_NEUTRAL_ID = false

// part I: universal taste by category
if category is universally loved:
   TASTE = love
else if category is universally hated:
   TASTE = hate
else if category is universally liked:
   TASTE = like
else if category is universally disliked:
   TASTE = dislike

// part II: universal taste by item ID
if itemID is universally loved:
   TASTE = love
   HAS_UNIVERSAL_ID = true
else if itemID is universally hated:
   TASTE = hate
   HAS_UNIVERSAL_ID = true
else if itemID is universally liked:
   TASTE = like
   HAS_UNIVERSAL_ID = true
else if itemID is universally disliked:
   TASTE = dislike
   HAS_UNIVERSAL_ID = true
else if itemID is universally neutral:
   TASTE = neutral
   HAS_UNIVERSAL_ID = true
   HAS_UNIVERSAL_NEUTRAL_ID = true

// part III: override neutral if it's from universal category
if TASTE is neutral and not HAS_UNIVERSAL_NEUTRAL_ID:
   if item is edible but tastes bad (-300 > edibility < 0):
      TASTE = hate
   else if item has a price < 20g:
      TASTE = dislike

// part IV: sometimes override with personal tastes
if ((npc loves itemID OR (item has a category AND npc loves category)) AND (item has no category OR npc doesn't personally love category OR no universal taste for itemID)
   return love
if ((npc hates itemID OR (item has a category AND npc hates category)) AND (item has no category OR npc doesn't personally hate category OR no universal taste for itemID)
   return hate
if ((npc like itemID OR (item has a category AND npc likes category)) AND (item has no category OR npc doesn't personally like category OR no universal taste for itemID)
   return like
if ((npc dislikes itemID OR (item has a category AND npc dislikes category)) AND (item has no category OR npc doesn't personally dislike category OR no universal taste for itemID)
   return dislike
if ((npc neutrals itemID OR (item has a category AND npc neutrals category)) AND (item has no category OR npc doesn't personally neutral category OR no universal taste for itemID)
   return neutral

// part V: return taste if not overridden
return TASTE
Category: Modding